(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{467:function(t,E,a){"use strict";a.r(E);var v=a(19),_=Object(v.a)({},(function(){var t=this,E=t.$createElement,a=t._self._c||E;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("[toc]")]),t._v(" "),a("h2",{attrs:{id:"计算机组成与体系结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#计算机组成与体系结构"}},[t._v("#")]),t._v(" 计算机组成与体系结构")]),t._v(" "),a("h3",{attrs:{id:"数据的表示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据的表示"}},[t._v("#")]),t._v(" 数据的表示（++++）")]),t._v(" "),a("h4",{attrs:{id:"进制转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进制转换"}},[t._v("#")]),t._v(" 进制转换")]),t._v(" "),a("ul",[a("li",[t._v("R进制转十进制使用按权展开法，其具体操作方式为：\n"),a("ul",[a("li",[t._v("将R进制数的每一位数值用R形式表示，即"),a("strong",[t._v("幂的底数是R，指数为k，k与该位和小数点之间的距离有关")]),t._v("。当该位位于小数点左边，k值是该位和小数点之间数码的个数，而当该位位于小数点右边，k值是负值，其绝对值是该位和小数点之间数码的个数加1")]),t._v(" "),a("li",[t._v("例如"),a("strong",[t._v("二进制")]),t._v("10100.01 = 1×2^4^ + 1×2^2^ + 1×2^-2^")]),t._v(" "),a("li",[t._v("例如"),a("strong",[t._v("七进制")]),t._v("604.01=6×7^2^ + 4×7^0^ + 1×7^-2^")])])]),t._v(" "),a("li",[t._v("十进制转R机制使用"),a("strong",[t._v("短除法")]),t._v("。例如将94转换为二进制数\n"),a("ul",[a("li",[t._v("2 | "),a("u",[t._v("94")]),t._v(" 余0")]),t._v(" "),a("li",[t._v("2 | "),a("u",[t._v("47")]),t._v(" 1")]),t._v(" "),a("li",[t._v("2 | "),a("u",[t._v("23")]),t._v(" 1")]),t._v(" "),a("li",[t._v("2 | "),a("u",[t._v("11")]),t._v(" 1")]),t._v(" "),a("li",[t._v("2 | "),a("u",[t._v("5")]),t._v(" 1")]),t._v(" "),a("li",[t._v("2 | "),a("u",[t._v("2")]),t._v(" 0")]),t._v(" "),a("li",[t._v("1")]),t._v(" "),a("li",[t._v("结果倒着来看，为1011110")]),t._v(" "),a("li",[t._v("小数部分乘R，取整，结果顺着来看")])])]),t._v(" "),a("li",[t._v("二进制转八进制与十六进制\n"),a("ul",[a("li",[t._v("2->8：把二进制数从低位到高位每3位为一份分开，然后算出每一份的数")]),t._v(" "),a("li",[t._v("2->16：把二进制数从低位到高位每4位为一份分开，然后算出每一份的数")]),t._v(" "),a("li",[t._v("小数部分从小数点开始每x位为一份分开")]),t._v(" "),a("li",[t._v("八进制与十六进制转二进制反着来")])])])]),t._v(" "),a("h4",{attrs:{id:"码制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#码制"}},[t._v("#")]),t._v(" 码制")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("分别是原码，反码，补码，移码")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("码制")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("数值1")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("数值-1")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("计算1-1")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("原码")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("0000 0001")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("1000 0001")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("1000 0010 ×")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("反码")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("0000 0001")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("1111 1110")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("1111 1111 ×")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("补码")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("0000 0001")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("1111 1111")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("0000 0000 √")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("移码")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("1000 0001")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("0111 1111")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("1000 0000 ×")])])])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("原码：")])]),t._v(" "),a("ul",[a("li",[t._v("高位为符号位，0表示正数，1表示负数")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("反码：")])]),t._v(" "),a("ul",[a("li",[t._v("正数的反码等于它本身")]),t._v(" "),a("li",[t._v("负数的反码等于除符号位其他位取反")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("补码：")])]),t._v(" "),a("ul",[a("li",[t._v("正数的补码等于它本身")]),t._v(" "),a("li",[t._v("负数的补码等于在反码的基础上+1")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("移码：")])]),t._v(" "),a("ul",[a("li",[t._v("在补码的基础上符号位取反")])])]),t._v(" "),a("li",[a("p",[t._v("数值表示范围")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("码制")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("定点整数（最高位符号位）")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("定点小数（小数点在符号位后面）")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("原码")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("-(2^n-1^-1) ~ +(2^n-1^-1)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("-(1-2^-(n-1)^) ~ +(1-2^-(n-1)^)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("反码")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("-(2^n-1^-1) ~ +(2^n-1^-1)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("-(1-2^-(n-1)^) ~ +(1-2^-(n-1)^)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("补码")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("-2^n-1^ ~ +(2^n-1^-1)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("-1 ~ +(1-2^-(n-1)^)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("移码")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("-2^n-1^ ~ +(2^n-1^-1)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("-1 ~ +(1-2^-(n-1)^)")])])])]),t._v(" "),a("ul",[a("li",[t._v("补码和移码比原码和反码少一个数：-0")])])]),t._v(" "),a("li",[a("p",[t._v("定点整数：")]),t._v(" "),a("ul",[a("li",[t._v("当n=8时")]),t._v(" "),a("li",[t._v("原码：-127~127，二进制：1111 1111 ~ 0111 1111")]),t._v(" "),a("li",[t._v("补码：1000 0000  ~ 0111 1111")]),t._v(" "),a("li",[t._v("其中-128的补码为1000 0000是人为规定的")])])]),t._v(" "),a("li",[a("p",[t._v("定点小数：")]),t._v(" "),a("ul",[a("li",[t._v("当n=8时")]),t._v(" "),a("li",[t._v("原码：-0.1111111 ~ +0.1111111，二进制：1.111 1111 ~ 0.111 1111")]),t._v(" "),a("li",[t._v("补码：1.000 0000 ~ 0.111 1111")]),t._v(" "),a("li",[t._v("其中-1的补码为1.000 0000是人为规定的")])])])]),t._v(" "),a("h4",{attrs:{id:"浮点的运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浮点的运算"}},[t._v("#")]),t._v(" 浮点的运算")]),t._v(" "),a("ul",[a("li",[t._v("浮点数的表示：N=尾数*基数^指数(阶码)^（科学计数法）")]),t._v(" "),a("li",[t._v("运算过程：对阶 > 尾数计算 > 结果格式化")]),t._v(" "),a("li",[t._v("特点：\n"),a("ol",[a("li",[t._v("一般尾数用"),a("strong",[t._v("补码")]),t._v("，阶码用"),a("strong",[t._v("移码")])]),t._v(" "),a("li",[a("strong",[t._v("阶码的位数")]),t._v("决定数的"),a("strong",[t._v("表示范围")]),t._v("，位数越多范围越大")]),t._v(" "),a("li",[a("strong",[t._v("尾数的位数")]),t._v("决定数的"),a("strong",[t._v("有效精度")]),t._v("，位数越多精度越高")]),t._v(" "),a("li",[t._v("对阶时，"),a("strong",[t._v("小数向大数看齐")])]),t._v(" "),a("li",[t._v("对阶是通过"),a("strong",[t._v("较小数的小数点左移")]),t._v("实现的")])])])]),t._v(" "),a("h3",{attrs:{id:"运算器与控制器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算器与控制器"}},[t._v("#")]),t._v(" 运算器与控制器（++++）")]),t._v(" "),a("h4",{attrs:{id:"计算机结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#计算机结构"}},[t._v("#")]),t._v(" 计算机结构")]),t._v(" "),a("ul",[a("li",[t._v("五大部件：运算器，控制器，存储器，输入设备，输出设备")]),t._v(" "),a("li",[t._v("CPU由运算器、控制器、寄存器组和内部总线组成")]),t._v(" "),a("li",[t._v("运算器包含：\n"),a("ul",[a("li",[a("strong",[t._v("算数逻辑单元ALU：数据的算术运算和逻辑运算")])]),t._v(" "),a("li",[t._v("累加寄存器AC：通用寄存器，为ALU提供一个工作区，用在暂存数")]),t._v(" "),a("li",[t._v("数据缓冲寄存器DR：写内存时，暂存指令或数据")]),t._v(" "),a("li",[t._v("状态条件寄存器：存状态标志与控制标志(争议:也有将其归为控制器的)")])])]),t._v(" "),a("li",[t._v("控制器包含：\n"),a("ul",[a("li",[a("strong",[t._v("程序计数器PC：存储下一条要执行指令的地址")])]),t._v(" "),a("li",[t._v("指令寄存器IR：存储即将执行的指令")]),t._v(" "),a("li",[t._v("指令译码器ID：对指令中的操作码字段进行分析解释")]),t._v(" "),a("li",[t._v("时序部件：提供时序控制信号")])])])]),t._v(" "),a("h4",{attrs:{id:"指令的基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指令的基本概念"}},[t._v("#")]),t._v(" 指令的基本概念")]),t._v(" "),a("ul",[a("li",[t._v("一条指令就是机器语言的一个语句，它是一组有意义的二进制代码，指令的基本格式如下：\n"),a("ul",[a("li",[t._v("操作码字段 | 地址码字段")])])]),t._v(" "),a("li",[t._v("操作码部分指出了计算机要执行什么性质的操作，如加法、减法、取数存数等。地址码字段需要包含各操作数的地址及操作结果的存放地址等，从其地址结构的角度可以分为三地址指令、二地址指令、一地址指令和零地址指令\n"),a("ul",[a("li",[t._v("OP | A1 | A2 | A3")]),t._v(" "),a("li",[t._v("OP | A1 | A2")]),t._v(" "),a("li",[t._v("OP | A1")]),t._v(" "),a("li",[t._v("OP")]),t._v(" "),a("li",[t._v("OP代表操作")]),t._v(" "),a("li",[t._v("例如：a+b=c -> + | a | b | c")])])])]),t._v(" "),a("h4",{attrs:{id:"寻址方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#寻址方式"}},[t._v("#")]),t._v(" 寻址方式")]),t._v(" "),a("ul",[a("li",[t._v("立即导址方式\n"),a("ul",[a("li",[t._v("特点：操作数直接在指令中，速度快，灵活性差")])])]),t._v(" "),a("li",[t._v("直接寻址方式\n"),a("ul",[a("li",[t._v("特点：指令中存放的是操作数的地址")])])]),t._v(" "),a("li",[t._v("间接寻址方式\n"),a("ul",[a("li",[t._v("特点：指令中存放了一个地址，这个地址对应的内容是操作数的地址")])])]),t._v(" "),a("li",[t._v("寄存器寻址方式\n"),a("ul",[a("li",[t._v("特点：寄存器存放操作数")])])]),t._v(" "),a("li",[t._v("寄存器间接导址方式\n"),a("ul",[a("li",[t._v("特点：奇存器内存放的是操作数的地址")])])])]),t._v(" "),a("h3",{attrs:{id:"flynn分类法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flynn分类法"}},[t._v("#")]),t._v(" Flynn分类法（++）")]),t._v(" "),a("ul",[a("li",[t._v("按并行程度进行分类\n"),a("ul",[a("li",[t._v("S：single单一，I：instructions指令，D：data，M：Multiple多的")])])])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("体系结构类型")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("结构")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("关键特性")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("代表")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("单指令流单数据流 SISD")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("控制部分：一个 | 处理器：一个 | 主存模块：一个")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("单处理器系统")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("单指令流多数据流 SIMD")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("控制部分：一个 | 处理器：多个 | 主存模块：多个")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("各处理器以异步的形式执行同一条指令")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("并列处理机、"),a("strong",[t._v("阵列处理机")]),t._v("、超级向量处理机")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("多指令流单数据流 MISD")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("控制部分：多个 | 处理器：一个 | 主存模块：多个")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("被证明不可能，至少是不实际")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("目前没有，有文献称流水线计算机为此类")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("多指令流多数据流 MIMD")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("控制部分：多个 | 处理器：多个 | 主存模块：多个")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("能够实现"),a("strong",[t._v("作业、任务、指令")]),t._v("等各级全面并行")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("多处理机系统、多计算机")])])])]),t._v(" "),a("h3",{attrs:{id:"cisc与risc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cisc与risc"}},[t._v("#")]),t._v(" CISC与RISC（++）")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("指令系统类型")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("指令")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("寻址方式")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("实现方式")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("其他")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("CISC（复杂）")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("数量多，使用频率差别大，可变长格式")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("支持多种")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("微程序控制技术（微码）")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("研制周期长")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("RISC（精简）")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("数量少，使用频率接近，定长格式，大部分为单周期指令操作寄存器，只有Load/Store操作内存")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("支持方式少")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("增加了通用寄存器，硬布线逻辑控制为主，适合采用流水线")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("优化编译，有效支持高级语言")])])])]),t._v(" "),a("ul",[a("li",[t._v("CISC：复杂指令集计算机 Complex Instruction Set Computer 复杂，指令数量多，频率差别大，多寻址")]),t._v(" "),a("li",[t._v("RISC：精简指令集计算机 Reduced Instruction Set Computing 精简，指令数量少，操作寄存器，单周期，少寻址，多通用寄存器，流水线")])]),t._v(" "),a("h3",{attrs:{id:"流水线技术"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#流水线技术"}},[t._v("#")]),t._v(" 流水线技术（++++）")]),t._v(" "),a("ul",[a("li",[t._v("流水线概念：\n"),a("ul",[a("li",[t._v("相关参数计算："),a("strong",[t._v("流水线执行时间计算、流水线吞吐率")]),t._v("、流水线加速比、流水线效率")]),t._v(" "),a("li",[t._v("流水线是指在程序执行时"),a("strong",[t._v("多条指令重叠进行操作")]),t._v("的一种"),a("strong",[t._v("准并行处理实现技术")]),t._v("，将"),a("strong",[t._v("空余的时间片利用起来")]),t._v("。各种部件同时处理是针对不同指令而言的，它们可同时为多条指令的不同部分进行工作以提高各部件的利用率和指令的平均执行速度")])])]),t._v(" "),a("li",[t._v("流水线计算：\n"),a("ul",[a("li",[t._v("流水线周期为执行时间最长的一段")]),t._v(" "),a("li",[t._v("流水线计算公式为:\n"),a("ul",[a("li",[a("strong",[t._v("1条指令执行时间＋(指令条数 - 1) * 流水线周期")])]),t._v(" "),a("li",[t._v("一条指令k个步骤给充足时间执行公式："),a("strong",[t._v("k * 流水线周期 + (指令条数 - 1) * 流水线周期")])])])]),t._v(" "),a("li",[t._v("例题：\n"),a("ul",[a("li",[t._v("一条指令的执行过程可以分解为取指、分析和执行三步，在取址时间t取指=3△t、分析时间t分析=2△t、执行时间t执行=4△t的情况下，若按串行方式执行，则10条指令全部执行完需要（）△t；若按流水线的方式执行，流水线周期为（）△t，则10条指令全部执行完需要（）△t")]),t._v(" "),a("li",[t._v("答案：90，4，45")])])])])]),t._v(" "),a("li",[t._v("超标量流水线：由两条流水线组成，度为2，能同时进行两个操作比如两个取址")]),t._v(" "),a("li",[t._v("流水线吞吐率：\n"),a("ul",[a("li",[t._v("流水线的吞吐率（Though Put rate，TP）是指在"),a("strong",[t._v("单位时间内流水线所完成的任务数量或输出的结果数量")]),t._v("。计算流水线吞吐率的最基本的公式如下：\n"),a("ul",[a("li",[t._v("TP=指令条数 / 流水线执行时间")])])]),t._v(" "),a("li",[t._v("流水线最大吞吐率：\n"),a("ul",[a("li",[t._v("TP(max)=Lim(n->∞) n / ((k+n-1)*△t)=1 / △t")])])])])])]),t._v(" "),a("h3",{attrs:{id:"存储系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存储系统"}},[t._v("#")]),t._v(" 存储系统（++++）")]),t._v(" "),a("h4",{attrs:{id:"层次化存储结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#层次化存储结构"}},[t._v("#")]),t._v(" 层次化存储结构")]),t._v(" "),a("ul",[a("li",[t._v("（速度快，容量小）CPU---Cache---内存（主存）---外存（辅存）（速度慢，容量大）")]),t._v(" "),a("li",[t._v("CPU：寄存器，最快，但容量小，成本高")]),t._v(" "),a("li",[t._v("Cache：按内容存取，在计算机的存储系统体系中，Cache是访问速度最快的层次（若有寄存器，则寄存器最快），使用Cache改善系统性能的依据是程序的局部性原理\n"),a("ul",[a("li",[t._v('如果以h代表Cache的访问命中率，t1表示Cache的周期，t2表示主存周期，以读操作为例，使用"Cache+主存"的系统平均周期为t3，则：\n'),a("ul",[a("li",[t._v("t3 = h×t1+(1-h)×t2")]),t._v(" "),a("li",[t._v("其中，(1-h)又称为失效率（未命中率）")])])]),t._v(" "),a("li",[t._v("映像：\n"),a("ul",[a("li",[a("strong",[t._v("直接相联映像")]),t._v("：硬件电路较简单，但"),a("strong",[t._v("冲突率很高")])]),t._v(" "),a("li",[a("strong",[t._v("全相联映像")]),t._v("：电路难于设计和实现，只适用于小容量的cache，"),a("strong",[t._v("冲突率较低")])]),t._v(" "),a("li",[a("strong",[t._v("组相联映像")]),t._v("：直接相联与全相联的"),a("strong",[t._v("折中")])]),t._v(" "),a("li",[t._v("地址映像是将主存与Cache的存储空间划分为若干大小相同的页（或称为块）\n"),a("ul",[a("li",[t._v("例如，某机的主存容量为1GB，划分为2048页，每页512KB；Cache容量为8MB，划分为16页，每页512KB\n"),a("ul",[a("li",[t._v("主存分为128个区，每个区16页，直接相联映像只能存每个区对应页数的内容，而且一次只能放一个区的对应页数")]),t._v(" "),a("li",[t._v("组相联映像在直接相联映像的基础上把多个页分为一组，每个组存对应组的内容")])])])])])])])])]),t._v(" "),a("li",[t._v("内存：分为随机存储器（RAM）和只读存储器（ROM）")]),t._v(" "),a("li",[t._v("外存：硬盘，光盘，U盘等")])]),t._v(" "),a("h4",{attrs:{id:"编址与计算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编址与计算"}},[t._v("#")]),t._v(" 编址与计算")]),t._v(" "),a("ul",[a("li",[t._v("按字编址：存储体的存储单元是字存储单元，即最小寻址单位是一个字，2字节")]),t._v(" "),a("li",[t._v("按字节编址：存储体的存储单元是字节存储单元;即最小寻址单位是字节，1字节(Byte) = 8位(bit)")]),t._v(" "),a("li",[t._v("根据存储器所要求的容量和选定的存储芯片的容量，就可以计算出所需芯片的总数，即：\n"),a("ul",[a("li",[t._v("总片数 = 总容量 / 每片的容量")])])]),t._v(" "),a("li",[t._v("例题：\n"),a("ul",[a("li",[t._v("若内存地址区间为4000H ~43FFH，每个存储单元可存储16位二制数，该内存区域用4片存储器芯片构成，则构成该内存所用的存储器芯片的容量是多少?")]),t._v(" "),a("li",[t._v("答案：容量：43FFH - 4000H + 1 (区间计算要+1)= 400H = 2^10^ × 16bit，有4片于是每片为2^10^ × 4bit")])])])]),t._v(" "),a("h3",{attrs:{id:"总线系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总线系统"}},[t._v("#")]),t._v(" 总线系统（+）")]),t._v(" "),a("ul",[a("li",[t._v("总线是计算机各种功能部件之间传送信息的公共通信干线，它是由导线组成的传输线束， 按照计算机所传输的信息种类")]),t._v(" "),a("li",[t._v("一条总线"),a("strong",[t._v("同一时刻仅允许一个设备发送，但允许多个设备接收")])]),t._v(" "),a("li",[t._v("总线的分类：\n"),a("ul",[a("li",[t._v("数据总线（Data Bus)：在CPU与RAM之间来回传送需要处理或是需要储存的数据")]),t._v(" "),a("li",[t._v("地址总线（Address Bus）：用来指定在RAM ( Random Access Memory）之中储存的数据的地址")]),t._v(" "),a("li",[t._v("控制总线（Control Bus）：将微处理器控制单元（Control Unit)的信号，传送到周边设备，一般常见的为USB Bus和1394 Bus")])])])]),t._v(" "),a("h3",{attrs:{id:"串联系统与并联系统可靠性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#串联系统与并联系统可靠性"}},[t._v("#")]),t._v(" 串联系统与并联系统可靠性（+）")]),t._v(" "),a("ul",[a("li",[t._v("串联系统可靠性：所有系统可靠性的乘积 R=R1×R2×R3...×Rn")]),t._v(" "),a("li",[t._v("并联系统可靠性：1-每个系统出错概率相乘 R=1-(1-R1)×(1-R2)×...×(1-Rn)")]),t._v(" "),a("li",[t._v("N模混合系统：串并联结合")])]),t._v(" "),a("h3",{attrs:{id:"校验码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#校验码"}},[t._v("#")]),t._v(" 校验码（+++）")]),t._v(" "),a("ul",[a("li",[t._v("码距：任何一种编码都由许多码字构成，"),a("strong",[t._v("任意两个码字之间最少变化的二进制位数就称为数据校验码的码距")])]),t._v(" "),a("li",[t._v("例如，用"),a("strong",[t._v("4位二进制表示16种状态")]),t._v("，则有"),a("strong",[t._v("16个不同的码字")]),t._v("，此时"),a("strong",[t._v("码距为1")]),t._v("，如0000与0001。")])]),t._v(" "),a("h4",{attrs:{id:"奇偶校验"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#奇偶校验"}},[t._v("#")]),t._v(" 奇偶校验")]),t._v(" "),a("ul",[a("li",[t._v("奇偶校验码的编码方法是：由若干位有效信息（如一个字节)，再加上一个二进制位（校验位）组成校验码")]),t._v(" "),a("li",[t._v('奇校验：整个校验码（有效信息位和校验位）中"1"的个数为奇数')]),t._v(" "),a("li",[t._v('偶校验：整个校验码（有效信息位和校验位）中"1"的个数为偶数')]),t._v(" "),a("li",[a("strong",[t._v("奇偶校验，可检查1位的错误，不可纠错")])])]),t._v(" "),a("h4",{attrs:{id:"循环冗余校验crc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#循环冗余校验crc"}},[t._v("#")]),t._v(" 循环冗余校验CRC")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("CRC校验，可检错，不可纠错")])]),t._v(" "),a("li",[t._v("CRC的编码方法是：在k位信息码之后拼接r位校验码。应用CRC码的关键是如何从k位信息位简便地得到r位校验位（编码），以及如何从k+r位信息码判断是否出错")]),t._v(" "),a("li",[t._v("用模2除法，在运算过程中不计进位的除法，对好位即可（最高位须对其）")]),t._v(" "),a("li",[t._v("例题：\n"),a("ul",[a("li",[t._v("信息码为1 0111 0101，多项式为X^4^+X^2^+1，求冗余位\n"),a("ul",[a("li",[t._v("最高项指数为4，所以被除数补4个0 -> 1 0111 0101 0000")]),t._v(" "),a("li",[t._v("除数为把2带入多项式得出的结果的二进制（X的n次方就是第n+1位为1，其他位为0），所以是10101")]),t._v(" "),a("li",[t._v("然后用模2除法计算，最后的余数即为冗余位，也就是CRC校验码（4位），补到之前的4个0处后，就是使用了CRC的报文")])])])])])]),t._v(" "),a("h4",{attrs:{id:"海明校验码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#海明校验码"}},[t._v("#")]),t._v(" 海明校验码")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("海明校验，可检错，也可纠错")])]),t._v(" "),a("li",[t._v("海明校验码的原理是：在有效信息位中加入几个校验位形成海明码，使码距比较均匀地拉大，并把海明码的每个二进制位分配到几个奇偶校验组中。当某一位出错后，就会引起有关的几个校验位的值发生变化，这不但可以发现错误，还能指出错误的位置，为自动纠错提供了依据")]),t._v(" "),a("li",[a("strong",[t._v("2^r^ >= m+r+1")]),t._v("，r：校验位，m：数据位")])]),t._v(" "),a("h2",{attrs:{id:"操作系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作系统"}},[t._v("#")]),t._v(" 操作系统")]),t._v(" "),a("h3",{attrs:{id:"进程管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进程管理"}},[t._v("#")]),t._v(" 进程管理")]),t._v(" "),a("h4",{attrs:{id:"进程的状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进程的状态"}},[t._v("#")]),t._v(" 进程的状态（++）")]),t._v(" "),a("ul",[a("li",[t._v("进程是程序在一个数据集合上运行的过程，它是系统进行资源分配和调度的一个独立单位。它由程序块、进程控制块（PCB）和数据块三部分组成")]),t._v(" "),a("li",[t._v("进程与程序的区别：进程是程序的一次执行过程，没有程序就没有进程。程序是完成某个特定功能的一系列程序语句的集合，只要不被破坏，它就永远存在。程序是一个静态的概念，而进程是一个动态的概念，它由创建而产生，完成任务后因撤销而消亡;进程是系统进行资源分配和调度的独立单位，而程序不是")]),t._v(" "),a("li",[t._v("进程的状态分为：运行、就绪、等待（堵塞）")])]),t._v(" "),a("h4",{attrs:{id:"前趋图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前趋图"}},[t._v("#")]),t._v(" 前趋图（+++）")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("画出下面6条语句的"),a("strong",[t._v("前趋图")]),t._v("（符号“:=”是赋值的意思）")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("S1：a:=x + y;")])]),t._v(" "),a("li",[a("p",[t._v("S2：b:=z + 1;")])]),t._v(" "),a("li",[a("p",[t._v("S3：c:=a - b;")])]),t._v(" "),a("li",[a("p",[t._v("S4：e:=c + 1;")])]),t._v(" "),a("li",[a("p",[t._v("S5：f:=c + a;")])]),t._v(" "),a("li",[a("p",[t._v("S6：g:=e * f;")])]),t._v(" "),a("li",[a("p",[t._v("分析：")]),t._v(" "),a("ul",[a("li",[t._v("S1与S2可以并发执行，因为它们互不依赖；但是S3必须在a（S1）、b（S2）被赋值后才能执行，S4必须在c（S3）之后才能执行，S5必须在c（S3）被赋值后才能执行，S6必须在e（S4）、f（S5）被赋值后才能执行。")])])]),t._v(" "),a("li",[a("p",[t._v("答案：")]),t._v(" "),a("div",{staticClass:"language-mermaid line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("graph LR\nA((S1))--\x3eB((S3))\nC((S2))--\x3eB\nB--\x3eD((S5))\nB--\x3eE((S4))\nD--\x3eF((S6))\nE--\x3eF\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])])])])])]),t._v(" "),a("h4",{attrs:{id:"信号量与pv操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#信号量与pv操作"}},[t._v("#")]),t._v(" 信号量与PV操作（++++）")]),t._v(" "),a("ul",[a("li",[t._v("临界资源：各进程间需要互斥方式对其进行共享的资源，如打印机、磁带机等")]),t._v(" "),a("li",[t._v("临界区：每个进程中"),a("strong",[t._v("访问临界资源的那段代码称为临界区")])]),t._v(" "),a("li",[t._v("信号量：是一种特殊的变量")]),t._v(" "),a("li",[a("strong",[t._v("P是申请资源的操作，V是释放资源的操作")])]),t._v(" "),a("li",[a("strong",[t._v("P操作：")]),t._v(" "),a("ul",[a("li",[t._v("资源量S=S-1 -> 判断S<0，F则继续，T则放入阻塞进程队列")])])]),t._v(" "),a("li",[a("strong",[t._v("V操作：")]),t._v(" "),a("ul",[a("li",[t._v("资源量S=S+1 -> 判断S<=0，T则说明阻塞队列中还有需要唤醒的进程，于是从阻塞队列中唤醒一个进程，F则继续")])])]),t._v(" "),a("li",[t._v("多个进程共享一台打印机问题（"),a("strong",[t._v("互斥模型")]),t._v("）：\n"),a("ul",[a("li",[t._v("P(S); 使用打印机 V(S); 后续代码;")]),t._v(" "),a("li",[t._v("互斥信号量S的初值为1")])])]),t._v(" "),a("li",[t._v("单缓冲区（一次只有一个进程执行）生产者、消费者问题（"),a("strong",[t._v("同步模型")]),t._v("）：\n"),a("ul",[a("li",[t._v("生产者：生产一个产品; P(S1); 送产品到缓冲区; V(S2)告诉消费者消费;")]),t._v(" "),a("li",[t._v("消费者：P(S2); 从缓冲区取产品; V(S1)告诉生产者生产; 消费产品;")]),t._v(" "),a("li",[t._v("S1初值为1，S2初值为0，S1为生产者生产产品，S2代表消费者消费产品")])])])]),t._v(" "),a("h4",{attrs:{id:"死锁及银行家算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#死锁及银行家算法"}},[t._v("#")]),t._v(" 死锁及银行家算法（++++）")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("死锁问题")]),t._v(" "),a("ul",[a("li",[t._v("进程管理是操作系统的核心，但如果设计不当，就会出现死锁的问题。如果一个进程在等待一件不可能发生的事，则进程就死锁了。而如果一个或多个进程产生死锁，就会造成系统死锁。")]),t._v(" "),a("li",[t._v("例：系统有5个进程：A、B、C、D、E。这5个进程都需要4个系统资源。如果系统至少有多少个资源，则不可能发生死锁\n"),a("ul",[a("li",[t._v("答案：进程数*(每个进程所需资源-1)+1")])])])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("死锁形成的四大条件：互斥、保持和等待、不可剥夺、环路等待")])])]),t._v(" "),a("li",[a("p",[t._v("银行家算法：分配资源的原则")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("当一个进程对资源的最大需求量不超过系统中的资源数时可以接纳该进程")])]),t._v(" "),a("li",[t._v("进程"),a("strong",[t._v("可以分期请求资源")]),t._v("，但请求的总数不能超过最大需求量")]),t._v(" "),a("li",[t._v("当系统现有的资源不能满足进程尚需资源数时，对进程的请求可以推迟分配，但总能使进程在有限的时间里得到资源")])])])]),t._v(" "),a("h3",{attrs:{id:"存储管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存储管理"}},[t._v("#")]),t._v(" 存储管理")]),t._v(" "),a("h4",{attrs:{id:"段页式存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#段页式存储"}},[t._v("#")]),t._v(" 段页式存储（++++）")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("页式存储："),a("strong",[t._v("将程序与内存均划分为同样大小的块，以页为单位将程序调入内存")])]),t._v(" "),a("ul",[a("li",[t._v("把逻辑地址空间划分为大小相等的若干页，页大小与块大小相等")]),t._v(" "),a("li",[a("strong",[t._v("逻辑地址=页号+页内地址")])]),t._v(" "),a("li",[a("strong",[t._v("物理地址=页帧号(物理块号)+页内地址")])]),t._v(" "),a("li",[t._v("优点：利用率高，碎片小，分配及管理简单")]),t._v(" "),a("li",[t._v("缺点：增加了系统开销，可能产生抖动现象")]),t._v(" "),a("li",[t._v("例如，页式存储系统中，每个页的大小为4KB\n"),a("ul",[a("li",[t._v("页表（页号，块号）：0,2 1,3 2,6 3,8...")]),t._v(" "),a("li",[t._v("逻辑地址：10 (1100 1101 1110)对应的物理地址为：110 1100 1101 1110")])])])])]),t._v(" "),a("li",[a("p",[t._v("段式存储："),a("strong",[t._v("按用户作业中的自然段来划分逻辑空间，然后调入内存，段的长度可以不一样")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("优点：多道程序共享内存，各段程序修改互不影响")])]),t._v(" "),a("li",[a("p",[t._v("缺点：内存利用率低，内存碎片浪费大")])]),t._v(" "),a("li",[a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("段号")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("段长")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("基址(起始地址)")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("0")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("30k")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("40k")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("20k")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("80k")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("2")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("15k")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("120k")])])])]),t._v(" "),a("ul",[a("li",[t._v("判断地址合法性：合法段地址：(0，25K)，非法段地址：(0,35K)，因为段号0的段长最多只有30k")])])])])]),t._v(" "),a("li",[a("p",[t._v("段页式存储："),a("strong",[t._v("段式与页式的综合体。先分段，再分页。1个程序有若干个段，每个段中可以有若干页，每个页的大小相同，但每个段的大小不同")])]),t._v(" "),a("ul",[a("li",[t._v("优点：空间浪费小、存储共享容易、存储保护容易、能动态连接\n缺点：由于管理软件的增加，复杂性和开销也随之增加，需要的硬件以及占用的内容也有所增加，使得执行速度大大下降")])])])]),t._v(" "),a("h4",{attrs:{id:"页面置换算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#页面置换算法"}},[t._v("#")]),t._v(" 页面置换算法（+）")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("最优（Optimal，OPT)算法")])]),t._v(" "),a("li",[a("p",[t._v("随机（RAND）算法")])]),t._v(" "),a("li",[a("p",[t._v("先进先出（FIFO）算法：有可能产生“抖动”")])]),t._v(" "),a("li",[a("p",[t._v('最近最少使用（LRU）算法：不会“抖动”，LRU的理论依据是"局部性原理"')])]),t._v(" "),a("li",[a("p",[t._v("时间局部性：刚被访问的内容，立即又被访问")])]),t._v(" "),a("li",[a("p",[t._v("空间局部性：刚被访问的内容，临近的空间很快被访问")])]),t._v(" "),a("li",[a("p",[t._v("磁盘管理：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("存取时间=寻道时间+等待时间，寻道时间是指磁头移动到磁道所需的时间，等待时间为等待读写的扇区转到磁头下方所用的时间")])]),t._v(" "),a("li",[a("p",[t._v("磁盘调度算法")]),t._v(" "),a("ul",[a("li",[t._v("先来先服务（FCFS）")]),t._v(" "),a("li",[t._v("最短寻道时间优先（SSTF）")]),t._v(" "),a("li",[t._v("扫描算法（SCAN）：从里(外)向外(里)再从外(里)向里(外)扫 ///\\")]),t._v(" "),a("li",[t._v("循环扫描（CSCAN）算法：从里(外)向外(里)扫再突然回到里(外) ////")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("读取磁盘数据时间计算")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("读取磁盘数据的时间应包括以下三个部分：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("找磁道的时间")])]),t._v(" "),a("li",[a("p",[t._v("找块（扇区）的时间，即旋转延迟时间")])]),t._v(" "),a("li",[a("p",[t._v("传输时间")])])])]),t._v(" "),a("li",[a("p",[t._v("例题：某磁盘磁头从一个磁道移至另一个磁道需要10ms。文件在磁盘上非连续存放，逻辑上相邻数据块的平均移动距离为10个磁道，每块的旋转延迟时间及传输时间分别为100ms和2ms，则读取一个100次的文件需要__毫秒时间")]),t._v(" "),a("ul",[a("li",[t._v("A.10200 B.11000 C.11200 D.20200")]),t._v(" "),a("li",[t._v("((10×10)+100+2)×100")])])])])])])])]),t._v(" "),a("h3",{attrs:{id:"文件管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件管理"}},[t._v("#")]),t._v(" 文件管理")]),t._v(" "),a("h4",{attrs:{id:"绝对路径与相对路径"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#绝对路径与相对路径"}},[t._v("#")]),t._v(" 绝对路径与相对路径（+++）")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5C%E6%A0%91%E5%BD%A2%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84.png",alt:"树形目录结构"}}),t._v(" "),a("h4",{attrs:{id:"索引文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#索引文件"}},[t._v("#")]),t._v(" 索引文件（++）")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5C%E7%B4%A2%E5%BC%95%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84.jpg",alt:"索引文件结构"}})]),t._v(" "),a("h4",{attrs:{id:"位示图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#位示图"}},[t._v("#")]),t._v(" 位示图（++）")]),t._v(" "),a("ul",[a("li",[t._v('位示图是利用二进制的一位来表示磁盘中的一个盘块的使用情况。当其值为“0”时，表示对应的盘块空闲；为“1”时，表示已经分配。有的系统把"0"作为盘块已分配的标记，把“1”作为空闲标志。(它们的本质上是相同的，都是用一位的两种状态标志空闲和已分配两种情况)磁盘上的所有盘块都有一个二进制位与之对应，这样，由所有盘块所对应的位构成一个集合，称为位示图')])]),t._v(" "),a("h3",{attrs:{id:"作业管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#作业管理"}},[t._v("#")]),t._v(" 作业管理")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5C%E4%BD%9C%E4%B8%9A%E7%AE%A1%E7%90%86.jpg",alt:"作业管理"}})]),t._v(" "),a("ul",[a("li",[t._v("作业调度算法\n"),a("ul",[a("li",[t._v("先来先服务法")]),t._v(" "),a("li",[t._v("时间片轮转发")]),t._v(" "),a("li",[t._v("短作业优先法")]),t._v(" "),a("li",[t._v("最高优先权优先法")]),t._v(" "),a("li",[t._v("高响应比优先法\n"),a("ul",[a("li",[t._v("等待时间 / 执行时间 = 响应比")])])])])])]),t._v(" "),a("h3",{attrs:{id:"设备管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设备管理"}},[t._v("#")]),t._v(" 设备管理")]),t._v(" "),a("ul",[a("li",[t._v("数据传输控制方式(从上往下效率越来越高)\n"),a("ul",[a("li",[t._v("程序控制(查询)方式：分为无条件传送和程序查询方式两种。方法简单，硬件开销小，但/O能力不高，严重影响CPU的利用率。")]),t._v(" "),a("li",[t._v("程序中断方式：与程序控制方式相比，中断方式因为CPU无需等待而提高了传输请求的响应速度")]),t._v(" "),a("li",[t._v("DMA方式：DMA方式是为了在"),a("strong",[t._v("主存与外设之间实现高速(不会影响CPU)、批量数据交换而设置的")]),t._v("。DMA方式比程序控制方式与中断方式都高效")]),t._v(" "),a("li",[t._v("调道方式")]),t._v(" "),a("li",[t._v("I/O处理机")])])])]),t._v(" "),a("h4",{attrs:{id:"虚设备与spooling技术"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#虚设备与spooling技术"}},[t._v("#")]),t._v(" 虚设备与SPOOLING技术（+）")]),t._v(" "),a("ul",[a("li",[t._v("SPOOLing是关于慢速字符设备如何与计算机主机交换信息的一种技术，通常称为“假脱发技术‘’")]),t._v(" "),a("li",[t._v("SPOOLing技术通过"),a("strong",[t._v("磁盘")]),t._v("实现")])]),t._v(" "),a("ol",[a("li",[t._v("对于多个输入设备")]),t._v(" "),a("li",[t._v("将输入的任务放到输入缓冲区当中")]),t._v(" "),a("li",[t._v("以输入进程，输入到输入井")]),t._v(" "),a("li",[t._v("再从输入井，依次的输出")])]),t._v(" "),a("ul",[a("li",[t._v("也就是说我们不需要以PV操作检查进程有没有开始，有没有做完")]),t._v(" "),a("li",[t._v("我们都将输入任务放到输入井中，然后从输入井依次输出任务")])]),t._v(" "),a("h2",{attrs:{id:"数据库系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库系统"}},[t._v("#")]),t._v(" 数据库系统")]),t._v(" "),a("h3",{attrs:{id:"数据库模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库模式"}},[t._v("#")]),t._v(" 数据库模式（++）")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("三级模式-两层映射")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("三级模式")]),t._v("：外模式(用户模式，逻辑层面)、概念模式、内模式(存储模式，物理存储层面)")]),t._v(" "),a("li",[a("strong",[t._v("两层映射")]),t._v("：外模式-概念模式映射，概念模式-内模式映射")])]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5C%E4%B8%89%E7%BA%A7%E6%A8%A1%E5%BC%8F.png",alt:"三级模式"}})])])]),t._v(" "),a("h3",{attrs:{id:"er模型-下午大题15分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#er模型-下午大题15分"}},[t._v("#")]),t._v(" ER模型（+++++）下午大题15分")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5CE-R.png",alt:"E-R"}})]),t._v(" "),a("ul",[a("li",[a("p",[t._v("经理和服务员表示的是"),a("strong",[t._v("弱实体，是某一个实体的特殊化")])])]),t._v(" "),a("li",[a("p",[t._v("1:1联系：优化后的关系模式可以写成右边两种方式")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5C%E4%B8%80%E5%AF%B9%E4%B8%80%E8%81%94%E7%B3%BB.png",alt:"一对一联系"}})])]),t._v(" "),a("li",[a("p",[t._v("1:n联系：优化后的关系模式可以写成下边的方式")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5C%E4%B8%80%E5%AF%B9%E5%A4%9A%E8%81%94%E7%B3%BB.png",alt:"一对多联系"}})])]),t._v(" "),a("li",[a("p",[t._v("m:n联系：不能像之前的联系一样可以合并优化了，必须单独列出来")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5C%E5%A4%9A%E5%AF%B9%E5%A4%9A%E8%81%94%E7%B3%BB.png",alt:"多对多联系"}})])]),t._v(" "),a("li",[a("p",[t._v("一个实体型转换为一个关系模式")])]),t._v(" "),a("li",[a("p",[t._v("联系转关系模式：")]),t._v(" "),a("ul",[a("li",[t._v("1:1联系：可将联系"),a("strong",[t._v("合并至任意一端的实体关系模式中")])]),t._v(" "),a("li",[t._v("1:n联系：可将联系"),a("strong",[t._v("合并至n端实体关系模式中")])]),t._v(" "),a("li",[t._v("m:n联系：联系"),a("strong",[t._v("必须单独转成关系模式")])])])]),t._v(" "),a("li",[a("p",[t._v("三个以上实体间的一个多元联系")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("例题：C")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5CER%E4%BE%8B%E9%A2%98.png",alt:"ER例题"}})])])])])]),t._v(" "),a("h3",{attrs:{id:"关系代数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关系代数"}},[t._v("#")]),t._v(" 关系代数（+++）")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5C%E5%85%B3%E7%B3%BB%E4%BB%A3%E6%95%B0.png",alt:"关系代数"}})]),t._v(" "),a("ul",[a("li",[a("p",[t._v("并，交，差考的较少")])]),t._v(" "),a("li",[a("p",[t._v("笛卡尔积，投影，选择：")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5C%E7%AC%9B%E5%8D%A1%E5%B0%94%E7%A7%AF.png",alt:"笛卡尔积"}})]),t._v(" "),a("ul",[a("li",[t._v("投影π sno,sname = π 1,2")])])]),t._v(" "),a("li",[a("p",[t._v("自然连接")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5C%E8%87%AA%E7%84%B6%E8%BF%9E%E6%8E%A5.png",alt:"自然连接"}})])])]),t._v(" "),a("h3",{attrs:{id:"规范化理论"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#规范化理论"}},[t._v("#")]),t._v(" 规范化理论（+++++）")]),t._v(" "),a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5C%E8%A7%84%E8%8C%83%E5%8C%96%E7%90%86%E8%AE%BA.png",alt:"规范化理论"}}),t._v(" "),a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5C%E8%A7%84%E8%8C%83%E5%8C%96%E7%90%86%E8%AE%BA%E4%BE%8B%E5%AD%90.png",alt:"规范化理论例子"}}),t._v(" "),a("h4",{attrs:{id:"键"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#键"}},[t._v("#")]),t._v(" 键")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("候选键："),a("strong",[t._v("拥有唯一标识元组（一行、每条记录称为一个元组），且无冗余")]),t._v("（任选其一成为"),a("strong",[t._v("主键")]),t._v("）")])]),t._v(" "),a("li",[a("p",[t._v("外键：其他关系的主键")])]),t._v(" "),a("li",[a("p",[t._v("图示法求候选键**（能以一己(组)之力推导出全部属性的就是候选键）**：")]),t._v(" "),a("ol",[a("li",[t._v("将关系的"),a("strong",[t._v("函数依赖关系，用“有向图”的方式表示")])]),t._v(" "),a("li",[a("strong",[t._v("找出入度为0的属性")]),t._v("，并以该属性集合为起点，尝试"),a("strong",[t._v("遍历有向图，若能正常遍历图中所有结点，则该属性集即为关系模式的候选键")])]),t._v(" "),a("li",[t._v("若入度为0的属性集不能遍历图中所有结点，则需要尝试性的"),a("strong",[t._v("将些中间结点")]),t._v("（既有入度，也有出度的结点）"),a("strong",[t._v("并入入度为0的属性集中")]),t._v("，直至该集合能遍历所有结点，"),a("strong",[t._v("集合为候选键")])])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("例题：右边的图考试的时候没有 A ABCD B")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5C%E5%80%99%E9%80%89%E9%94%AE%E4%BE%8B%E9%A2%98.png",alt:"候选键例题"}})])])])]),t._v(" "),a("li",[a("p",[t._v("主属性与非主属性：")]),t._v(" "),a("ul",[a("li",[t._v("定义："),a("strong",[t._v("组成候选码的属性")]),t._v("就是主属性，其它的就是非主属性")]),t._v(" "),a("li",[t._v("例：关系模式CSZ (CITY ，ST，ZIP），其属性组上的函数依赖集为：F={(CITY ,ST)→ZIP，ZIP→CITY}\n其中CITY表示城市，ST表示街道，ZIP表示邮政编码\n"),a("ul",[a("li",[t._v("（ST，CITY），（ST，ZIP）都是候选键，所以关系模式CSZ没有非主属性")])])])])])]),t._v(" "),a("h4",{attrs:{id:"范式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#范式"}},[t._v("#")]),t._v(" 范式")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("第一范式（1NF）：在关系模式R中，当且仅当所有域只包含"),a("strong",[t._v("原子值")]),t._v("，即每个属性都是"),a("strong",[t._v("不可再分的数据项")]),t._v("，则称关系模式R是第一范式")]),t._v(" "),a("ul",[a("li",[t._v("例如：关系模式R（系名称，高级职称人数）是否满足1NF，如果不满足，应如何调整？")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("系名称")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("高级职")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("称人数")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("教授")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("副教授")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("计算机系")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("6")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("10")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("电子系")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("3")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("5")])])])]),t._v(" "),a("ul",[a("li",[t._v("高级职称可再分，所以不是第一范式。调整：拆了高级职称")])])]),t._v(" "),a("li",[a("p",[t._v("第二范式（2NF )："),a("strong",[t._v("当且仅当关系模式R是第一范式")]),t._v("(1NF)，且"),a("strong",[t._v("每一个非主属性完全依赖候选键")]),t._v("（没有不完全依赖）时，则称关系模式R是第二范式")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5C%E7%AC%AC%E4%BA%8C%E8%8C%83%E5%BC%8F1.png",alt:"第二范式1"}})]),t._v(" "),a("ul",[a("li",[a("p",[t._v("思考题：关系模式SC(学号，课程号，成绩，学分)，其中：(学号，课程号)→成绩，课程号→学分，会存在哪些问题（从数据冗余、更新异常、插入异常、删除异常这几个方面来考虑），解决方案是什么？")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5C%E7%AC%AC%E4%BA%8C%E8%8C%83%E5%BC%8F.png",alt:"第二范式"}})]),t._v(" "),a("ul",[a("li",[t._v("拆成（学号，课程号，成绩）、（课程号，学分）两个表")])])])])]),t._v(" "),a("li",[a("p",[t._v("第三范式（3NF）：当且仅当关系模式R是第二范式（2NF)，且R中没有非主属性传递依赖于候选键时，则称关系模式R是第三范式")]),t._v(" "),a("ul",[a("li",[t._v("如图这类不属于第三范式")])]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5C%E7%AC%AC%E4%B8%89%E8%8C%83%E5%BC%8F.png",alt:"第三范式"}})]),t._v(" "),a("ul",[a("li",[a("p",[t._v("思考题：学生关系（学号，姓名，系号，系名，系位置）各属性分别代表学号，姓名，所在系号，系名称，系地址。思考该关系模式会存在哪些问题（从数据冗余、更新异常、插入异常、删除异常这几个方面来考虑），解决方案是什么?")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5C%E7%AC%AC%E4%B8%89%E8%8C%83%E5%BC%8F1.png",alt:"第三范式1"}})]),t._v(" "),a("ul",[a("li",[t._v("拆成（学号，姓名，系号）、（系号，系名，系位置）")])])])])]),t._v(" "),a("li",[a("p",[t._v("BC范式（BCNF）：设R是一个关系模式，F是它的依赖集，R属于BCNF当且仅当其F中"),a("strong",[t._v("每个依赖的决定因素必定包含R的某个候选码")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("与第三范式相比，一个是“任何非关键字段不能”，一个是“任何字段不能”")])]),t._v(" "),a("li",[a("p",[t._v("例：关系模式STJ (S,T，J）中，S表示学生，T表示老师，J表示课程。每一老师只教一门课程。每门课程有若干老师，某一学生选定某门课，就对应一个固定老师")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5CBC%E8%8C%83%E5%BC%8F.png",alt:"BC范式"}})])])])]),t._v(" "),a("li",[a("p",[t._v("总结：")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5C%E8%8C%83%E5%BC%8F.png",alt:"范式"}})])])]),t._v(" "),a("h4",{attrs:{id:"模式分解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模式分解"}},[t._v("#")]),t._v(" 模式分解")]),t._v(" "),a("ul",[a("li",[t._v("保持函数依赖关系，函数依赖 (Functional Dependency，FD)\n"),a("ul",[a("li",[t._v("设数据厍模式p={R1，R2，...，RK是关系模式R的一个分解，F是R上的函数依赖集，p中每个模式Ri上的FD集是Fi。如果{F1，F2 ,...，FK}与F是等价的（即相互逻辑蕴涵），那么称"),a("strong",[t._v("分解p保持FD")])]),t._v(" "),a("li",[t._v("例：设关系模式R(U,F），其中U={A，B，C，D，E}，F={A→BC，C→D,BC→E，E→A}，则分解P={R1(ABCE)，R2(CD)}是否保持函数依赖？而分解p={R1(ABE)，R2(CD)}是否保持函数依赖？\n"),a("ul",[a("li",[t._v("是，否")])])])])]),t._v(" "),a("li",[t._v("无损分解：\n"),a("ul",[a("li",[t._v("什么是有损，什么又是无损？有损：不能还原。无损：可以还原")]),t._v(" "),a("li",[a("strong",[t._v("无损联接分解：指将一个关系模式分解成若干个关系模式后，通过自然联接和投影等运算仍能还原到原来的关系模式")])]),t._v(" "),a("li",[t._v("思考题：\n"),a("ul",[a("li",[t._v("有关系模式：成绩（学号，姓名，课程号，课程名，分数)")]),t._v(" "),a("li",[t._v("函数依赖：学号→姓名，课程号→课程名，(学号，课程号）→分数")]),t._v(" "),a("li",[t._v("若将其分解为：\n"),a("ul",[a("li",[t._v("成绩(学号，课程号，分数)")]),t._v(" "),a("li",[t._v("学生(学号，姓名)")]),t._v(" "),a("li",[t._v("课程(课程号，课程名)")])])]),t._v(" "),a("li",[t._v("请思考该分解是否为无损分解？\n"),a("ul",[a("li",[t._v("由于有：学号→姓名，所以")]),t._v(" "),a("li",[t._v("成绩（学号，课程号，分数，姓名）")]),t._v(" "),a("li",[t._v("由于有：课程号→课程名，所以")]),t._v(" "),a("li",[t._v("成绩（学号，课程号，分数，姓名，课程名)")])])])])]),t._v(" "),a("li",[t._v("公式法：R1∩R2->| R1-R2 |，只适用于两个关系模式，两个关系模式的交集会等于两个交集的差即无损分解")])])])]),t._v(" "),a("h3",{attrs:{id:"sql语言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql语言"}},[t._v("#")]),t._v(" SQL语言（++++）")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Csql.png",alt:"sql"}}),t._v(" "),a("h3",{attrs:{id:"并发控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#并发控制"}},[t._v("#")]),t._v(" 并发控制（++）")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5C%E4%BA%8B%E5%8A%A1.png",alt:"事务"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5C%E5%B9%B6%E5%8F%91%E9%97%AE%E9%A2%98.png",alt:"并发问题"}})]),t._v(" "),a("ul",[a("li",[t._v("S封锁：共享锁")]),t._v(" "),a("li",[t._v("X封锁：排它锁")])]),t._v(" "),a("h3",{attrs:{id:"数据库完整性约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库完整性约束"}},[t._v("#")]),t._v(" 数据库完整性约束（+）")]),t._v(" "),a("ul",[a("li",[t._v("完整性约束是为了表的数据的正确性。如果数据不正确，那么一开始就不能添加到表中")])]),t._v(" "),a("h2",{attrs:{id:"计算机网络与信息安全"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#计算机网络与信息安全"}},[t._v("#")]),t._v(" 计算机网络与信息安全")]),t._v(" "),a("h3",{attrs:{id:"开放系统互连参考模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开放系统互连参考模型"}},[t._v("#")]),t._v(" 开放系统互连参考模型（++）")]),t._v(" "),a("h4",{attrs:{id:"osi-rm七层模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#osi-rm七层模型"}},[t._v("#")]),t._v(" OSI/RM七层模型")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5C%E4%B8%83%E5%B1%82%E6%A8%A1%E5%9E%8B.png",alt:"七层模型"}})]),t._v(" "),a("ul",[a("li",[a("p",[t._v("传输层传输的是报文，网络层传输的是包，数据链路层传输的是帧，物理层传输的是bit")])]),t._v(" "),a("li",[a("p",[t._v("TCP与UDP区别")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}}),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("TCP")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("UDP")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("是否连接")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("面向连接")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("面向非连接")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("传输可靠性")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("可靠")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("不可靠")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("应用场合")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("少量数据")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("传输大量数据")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("速度")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("慢")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("快")])])])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("TCP连接只能是点到点、一对一的")])]),t._v(" "),a("li",[a("p",[t._v("UDP支持一对一，一对多，多对一和多对多的交互通信")])])])]),t._v(" "),a("li",[a("p",[t._v("ARP与RARP：ARP协议就是将IP地址转换为MAC物理地址，而RARP就是ARP的逆向，也就是将MAC物理地址转换为IP地址")])])]),t._v(" "),a("h3",{attrs:{id:"tcp-ip协议族"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcp-ip协议族"}},[t._v("#")]),t._v(" TCP/IP协议族（++++）")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("TCP/IP模型对应OSI七层模型")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5CTCPIP%E6%A8%A1%E5%9E%8B.png",alt:"TCPIP模型"}})]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("记")])]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5C%E5%8D%8F%E8%AE%AE.png",alt:"协议"}})])]),t._v(" "),a("li",[a("p",[t._v("POP3：110端口，邮件收取")])]),t._v(" "),a("li",[a("p",[t._v("SMTP：25端口，邮件发送")])]),t._v(" "),a("li",[a("p",[t._v("FTP：20数据端口/21控制端口，文件传输协议")])]),t._v(" "),a("li",[a("p",[t._v("HTTP：80端口，超文本传输协议，网页传输")])]),t._v(" "),a("li",[a("p",[t._v("DHCP：67端口，IP地址自动分配")])]),t._v(" "),a("li",[a("p",[t._v("SNMP：161端口，简单网络管理协议")])]),t._v(" "),a("li",[a("p",[t._v("DNS：53端口，域名解析协议，记录域名与IP的映射关系")])]),t._v(" "),a("li",[a("p",[t._v("TCP∶可靠的传输层协议")])]),t._v(" "),a("li",[a("p",[t._v("UDP：不可靠的传输层协议")])]),t._v(" "),a("li",[a("p",[t._v("ICMP：因特网控制协议，PING命令来自该协议")])]),t._v(" "),a("li",[a("p",[t._v("IGMP：组播协议")])]),t._v(" "),a("li",[a("p",[t._v("ARP：地址解析协议，IP地址转换为MAC地址")])]),t._v(" "),a("li",[a("p",[t._v("RARP：反向地址解析协议，MAC地址转IP地址")])])])])]),t._v(" "),a("h3",{attrs:{id:"ip地址与子网划分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ip地址与子网划分"}},[t._v("#")]),t._v(" IP地址与子网划分（+++++）")]),t._v(" "),a("h4",{attrs:{id:"ip地址"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ip地址"}},[t._v("#")]),t._v(" IP地址")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5CIP%E5%88%86%E7%B1%BB.png",alt:"IP分类"}})]),t._v(" "),a("h4",{attrs:{id:"子网划分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#子网划分"}},[t._v("#")]),t._v(" 子网划分")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("子网掩码：")]),t._v(" "),a("ul",[a("li",[t._v("将一个网络划分成多个子网（取部分主机号当子网号）")]),t._v(" "),a("li",[t._v("将多个网络合并成一个大的网络（取部分网络号当主机号）一般不考")])])]),t._v(" "),a("li",[a("p",[t._v("例题1：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("将B类IP地址168.195.0.0划分为27个子网，子网掩码是多少？2^5^ = 32 > 27，需要多5位网络号")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cip%E5%88%92%E5%88%86.png",alt:"ip划分"}})])])])]),t._v(" "),a("li",[a("p",[t._v("例题2：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("将B类IP地址168.195.0.0划分成若干子网，每个子网内有主机700台，则子网掩码为多少？2^10^ = 1024 - 2 > 700，主机位需要10位")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cip%E5%88%92%E5%88%862.png",alt:"ip划分2"}})])])])])]),t._v(" "),a("h3",{attrs:{id:"网络规划与设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网络规划与设计"}},[t._v("#")]),t._v(" 网络规划与设计（+）")]),t._v(" "),a("ul",[a("li",[t._v("层次化网络设计")])]),t._v(" "),a("h3",{attrs:{id:"_3g与4g标准"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3g与4g标准"}},[t._v("#")]),t._v(" 3G与4G标准（++）")]),t._v(" "),a("h3",{attrs:{id:"html语言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#html语言"}},[t._v("#")]),t._v(" HTML语言（++）")]),t._v(" "),a("h3",{attrs:{id:"对称加密与非对称加密"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对称加密与非对称加密"}},[t._v("#")]),t._v(" 对称加密与非对称加密（+++）")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5C%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86.png",alt:"对称加密"}}),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5C%E9%9D%9E%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86.png",alt:"非对称加密"}}),t._v(" "),a("h3",{attrs:{id:"信息摘要与数字签名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#信息摘要与数字签名"}},[t._v("#")]),t._v(" 信息摘要与数字签名（++）")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5C%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D.png",alt:"数字签名"}}),t._v(" "),a("ul",[a("li",[t._v("消息摘要\n"),a("ul",[a("li",[t._v("数字摘要：由单向散列函数加密成固定长度的散列值，是不可逆的")]),t._v(" "),a("li",[t._v("你好-(信息摘要)->@#%^@#$%")]),t._v(" "),a("li",[t._v("常用的消息摘要算法有MD5，SHA等，市场上广泛使用的MD5，SHA算法的散列值分别为128和160位，由于SHA通常采用的密钥长度较长，因此安全性高于MD5")])])])]),t._v(" "),a("h3",{attrs:{id:"数字证书"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数字证书"}},[t._v("#")]),t._v(" 数字证书（++）")]),t._v(" "),a("ul",[a("li",[t._v("数字证书是一种权威性的电子文档。它提供了一种在Internet上验证您身份的方式，其作用类似于司机的驾驶执照或日常生活中的身份证。它是由一个由权威机构---CA证书授权(Certificate Authority)中心发行的，人们可以在互联网交往中用它来识别对方的身份。当然在数字证书认证的过程中，证书认证中心（CA）作为权威的、公正的、 可信赖的第三方，其作用是至关重要的")])]),t._v(" "),a("h3",{attrs:{id:"网络安全协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网络安全协议"}},[t._v("#")]),t._v(" 网络安全协议（+++）")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5C%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8.png",alt:"网络安全"}}),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5C%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%94%BB%E5%87%BB.png",alt:"网络安全攻击"}}),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5CDDOS.png",alt:"DDOS"}}),t._v(" "),a("h3",{attrs:{id:"防火墙技术与网络攻击"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#防火墙技术与网络攻击"}},[t._v("#")]),t._v(" 防火墙技术与网络攻击（+++）")]),t._v(" "),a("ul",[a("li",[t._v("DMZ区：隔离区，既要服务外网又要服务内网的放入DMZ区，比如WEB服务器")])]),t._v(" "),a("h3",{attrs:{id:"计算机病毒与木马"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#计算机病毒与木马"}},[t._v("#")]),t._v(" 计算机病毒与木马（+++）")]),t._v(" "),a("ul",[a("li",[t._v("病毒：编制或者在计算机程序中插入的破坏计算机功能或者破坏数据，影响计算机使用并且能够自我复制的一组计算机指令或者程序代码")]),t._v(" "),a("li",[t._v("木马：计算机木马是一种后门程序，常被黑客用作控制远程计算机的工具")])]),t._v(" "),a("h2",{attrs:{id:"系统开发基础-重点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#系统开发基础-重点"}},[t._v("#")]),t._v(" 系统开发基础（重点）")]),t._v(" "),a("h3",{attrs:{id:"开发模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开发模型"}},[t._v("#")]),t._v(" 开发模型（+++++）")]),t._v(" "),a("h4",{attrs:{id:"瀑布模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#瀑布模型"}},[t._v("#")]),t._v(" 瀑布模型")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5C%E7%80%91%E5%B8%83.png",alt:"瀑布"}})]),t._v(" "),a("ul",[a("li",[t._v("每个阶段都有相应的产出，软件开发的各项活动严格按照线性方式进行，当前活动接受上一项活动的工作结果，实施完成所需的工作内容。当前活动的工作结果需要进行验证，如果验证通过，则该结果作为下一项活动的输入，继续进行下一项活动，否则返回修改")]),t._v(" "),a("li",[t._v("适用于需求比较明确的项目")])]),t._v(" "),a("h4",{attrs:{id:"v模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v模型"}},[t._v("#")]),t._v(" V模型")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5CV.png",alt:"V"}})]),t._v(" "),a("ul",[a("li",[t._v("着重测试，不足依然是测试放在了编码之后")])]),t._v(" "),a("h4",{attrs:{id:"喷泉模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#喷泉模型"}},[t._v("#")]),t._v(" 喷泉模型")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5C%E5%96%B7%E6%B3%89.png",alt:"喷泉"}})]),t._v(" "),a("ul",[a("li",[t._v("每个阶段没有明确的界限，是面向对象的开发模式")]),t._v(" "),a("li",[t._v("具有更多的增量和迭代性质，生存期的各个阶段可以相互重叠和多次反复，而且在项目的整个生存期中还可以嵌入子生存期")]),t._v(" "),a("li",[t._v("开发过程中需要大量的开发人员，因此不利于项目的管理")])]),t._v(" "),a("h4",{attrs:{id:"原型化模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原型化模型"}},[t._v("#")]),t._v(" 原型化模型")]),t._v(" "),a("ul",[a("li",[t._v("沟通，实现客户或未来的用户与系统的交互，经过和用户针对原型的讨论和交流，弄清需求以便真正把握用户需要的软件产品是什么样子的")])]),t._v(" "),a("h4",{attrs:{id:"演化模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#演化模型"}},[t._v("#")]),t._v(" 演化模型")]),t._v(" "),a("ul",[a("li",[t._v("演化模型主要针对事先不能完整定义需求的软件开发，用户可以给出待开发系统的核心需求，并且当看到核心需求实现后，能够有效地提出反馈，以支持系统的最终设计和实现")])]),t._v(" "),a("h4",{attrs:{id:"螺旋模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#螺旋模型"}},[t._v("#")]),t._v(" 螺旋模型")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5C%E8%9E%BA%E6%97%8B.png",alt:"螺旋"}})]),t._v(" "),a("ul",[a("li",[t._v("它是风险驱动的，但是，这也可能是它的一个弱点。除非软件开发人员具有丰富的风险评估经验和这方面专门的知识，否则将出现真正的风险；当项目实际正在走向灾难时，开发人员可能还认为一切正常")])]),t._v(" "),a("h4",{attrs:{id:"统一过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#统一过程"}},[t._v("#")]),t._v(" 统一过程")]),t._v(" "),a("ul",[a("li",[t._v("统一过程（RUP/UP，Rational Unified Process）是一种以用例驱动、以架构为核心、迭代及增量的软件过程模型，由UML方法和工具支持，广泛应用于各类面向对象项目")]),t._v(" "),a("li",[t._v("具有初始阶段，细化阶段，构造阶段和移交阶段")]),t._v(" "),a("li",[t._v("每个阶段会进行多次迭代，构架提供了一种结构来指导迭代过程中的工作，而用例则确定了目标并驱动每次迭代的工作")])]),t._v(" "),a("h4",{attrs:{id:"敏捷方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#敏捷方法"}},[t._v("#")]),t._v(" 敏捷方法")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5C%E6%95%8F%E6%8D%B7%E6%96%B9%E6%B3%95.png",alt:"敏捷方法"}})]),t._v(" "),a("ul",[a("li",[t._v("极限编程：XP 是一种轻量（敏捷）、高效、低风险、柔性、可预测、科学而且充满乐趣的软件开发方式，用于费用控制严格的公司中的使用")]),t._v(" "),a("li",[t._v("Cockburn的水晶系列方法：用最少纪律约束而仍能成功的方法，任何项目，无论大小、敏捷程度，其最重要的一项体系特征是"),a("strong",[t._v("每过几个月就向用户交付已测试的运行代码")]),t._v("。如果你使用了此体系特征，你就会发现，“经常交付”的作用还是很让人吃惊的")]),t._v(" "),a("li",[t._v("开放式源码：开放式源码指的是开放源码界所用的一种运作方式，一个特别之处，就是程序开发人员在地域上分布很广，这使得它和其他敏捷方法不同，因为一般的敏捷方法都强调项目组成员在同一地点工作。"),a("strong",[t._v("开放源码的一个突出特点就是查错排障（debug）的高度并行性")]),t._v("，任何人发现了错误都可将改正源码的“补丁”文件发给维护者。然后由维护者将这些“补丁”或是新增的代码并入源码库")]),t._v(" "),a("li",[t._v("Scrum： Scrum是一个用于开发和维持复杂产品的框架，是一个增量的、迭代的开发过程，在每个迭代结束时，Scrum 团队将递交潜在可交付的产品增量")]),t._v(" "),a("li",[t._v("FDD：FDD 也是一个迭代的开发模型。FDD的每一步都"),a("strong",[t._v("强调质量")]),t._v("，"),a("strong",[t._v("不断地交付可运行的软件")]),t._v("，并以很小的开发提供精确的项目进度报告和状态信息。同敏捷方法一样，FDD 弱化了过程在软件开发中的地位。虽然 FDD 中也定义了开发的过程，不过一个几页纸就能完全描述的过程深受开发者的喜爱")]),t._v(" "),a("li",[t._v("ASD：其核心是三个非线性的、重叠的开发阶段：猜测、合作与学习")])]),t._v(" "),a("h3",{attrs:{id:"软件开发方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#软件开发方式"}},[t._v("#")]),t._v(" 软件开发方式（+）")]),t._v(" "),a("ul",[a("li",[t._v("结构化方法（面向数据流）\n"),a("ul",[a("li",[t._v("用户至上")]),t._v(" "),a("li",[t._v("严格区分工作阶段，每阶段有任务和结果")]),t._v(" "),a("li",[t._v("强调系统开发过程的整体性和全局性")]),t._v(" "),a("li",[t._v("系统开发过程工程化，文档资料标准化")]),t._v(" "),a("li",[t._v("自顶向下，逐步分解(求精)")])])]),t._v(" "),a("li",[t._v("原型法")]),t._v(" "),a("li",[t._v("面向对象方法\n"),a("ul",[a("li",[t._v("更好的复用性")]),t._v(" "),a("li",[t._v("关键在于建立一个全面、合理、统一的模型")]),t._v(" "),a("li",[t._v("分析、设计、实现三个阶段，界限不明确")])])]),t._v(" "),a("li",[t._v("面向服务的方法")])]),t._v(" "),a("h3",{attrs:{id:"需求分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#需求分析"}},[t._v("#")]),t._v(" 需求分析（+）")]),t._v(" "),a("ul",[a("li",[t._v("需求的任务")]),t._v(" "),a("li",[t._v("需求的过程\n"),a("ul",[a("li",[t._v("问题识别")]),t._v(" "),a("li",[t._v("分析与综合")]),t._v(" "),a("li",[t._v("编制需求分析文档")]),t._v(" "),a("li",[t._v("需求分析与评审")])])]),t._v(" "),a("li",[t._v("需求的分类\n"),a("ul",[a("li",[t._v("功能需求")]),t._v(" "),a("li",[t._v("非功能需求")]),t._v(" "),a("li",[t._v("设计约束")])])]),t._v(" "),a("li",[t._v("应用的工具\n"),a("ul",[a("li",[t._v("数据流图（DFD）")]),t._v(" "),a("li",[t._v("数据字典（DD）")]),t._v(" "),a("li",[t._v("判定表")]),t._v(" "),a("li",[t._v("判定树")])])])]),t._v(" "),a("h3",{attrs:{id:"软件设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#软件设计"}},[t._v("#")]),t._v(" 软件设计（++）")]),t._v(" "),a("ul",[a("li",[t._v("软件设计的任务与活动")]),t._v(" "),a("li",[t._v("模块设计原则")]),t._v(" "),a("li",[t._v("应用的工具\n"),a("ul",[a("li",[t._v("IPO图")]),t._v(" "),a("li",[t._v("PDL")]),t._v(" "),a("li",[t._v("PAD")]),t._v(" "),a("li",[t._v("程序流程图")]),t._v(" "),a("li",[t._v("N/S盒图")])])]),t._v(" "),a("li",[t._v("内聚类型（高到低）：功能->顺序->通信->过程->(瞬时)时间->逻辑->偶然(巧合)")]),t._v(" "),a("li",[t._v("耦合类型（低到高）：非直接->数据->标记->控制->外部->公共->内容")]),t._v(" "),a("li",[t._v("软件设计要求高内聚，低耦合")])]),t._v(" "),a("h3",{attrs:{id:"软件测试与维护"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#软件测试与维护"}},[t._v("#")]),t._v(" 软件测试与维护")]),t._v(" "),a("h4",{attrs:{id:"黑盒测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#黑盒测试"}},[t._v("#")]),t._v(" 黑盒测试")]),t._v(" "),a("ul",[a("li",[t._v("等价类划分法\n"),a("ul",[a("li",[t._v("确定无效与有效等价类")]),t._v(" "),a("li",[t._v("设计用例尽可能多的覆盖有效类，例如地区码和前缀都有效：123 666")]),t._v(" "),a("li",[t._v("设计用例只覆盖一个无效类，例如地区码无效：asd")])])])]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5C%E7%AD%89%E4%BB%B7%E7%B1%BB%E5%88%92%E5%88%86.png",alt:"等价类划分"}})]),t._v(" "),a("ul",[a("li",[t._v("边界值分析法\n"),a("ul",[a("li",[t._v("处理边界情况时最容易出错")]),t._v(" "),a("li",[t._v("选取的测试数据应该恰好等于、稍小于或稍大于边界值")])])])]),t._v(" "),a("h4",{attrs:{id:"白盒测试用例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#白盒测试用例"}},[t._v("#")]),t._v(" 白盒测试用例（++++）")]),t._v(" "),a("ul",[a("li",[t._v("常用的白盒测试方法有逻辑覆盖、循环覆盖和路径测试")]),t._v(" "),a("li",[a("strong",[t._v("逻辑覆盖")]),t._v("主要用测试数据运行被测程序对程序逻辑的覆盖程度，按覆盖程度从弱到强排序依次为：语句覆盖、判定覆盖、条件覆盖、判定-条件覆盖、条件组合覆盖、路径覆盖\n"),a("ul",[a("li",[t._v("语句覆盖：每条语句（判断语句，条件语句等）都执行")]),t._v(" "),a("li",[t._v("判定覆盖（分支覆盖）：不仅每个语句至少执行一次，而且每个判定的每种可能结果（分支）都至少执行一次。比语句强，真分支假分支都要覆盖。菱形框中为判定。判定覆盖包含语句覆盖")]),t._v(" "),a("li",[t._v("条件覆盖：不仅每个语句至少执行一次，而且使判定表达式中的每个条件都取到各种可能的结果。条件覆盖不一定包含判定覆盖，而判定覆盖也不一定包含条件覆盖")]),t._v(" "),a("li",[t._v("判定条件覆盖：同时满足判定覆盖和条件覆盖。它的含义是，选取足够的测试用例，使得判定表达式中每个条件的所有可能结果至少出现一次。而且每个判定本身的所有可能结果也至少出现一次")]),t._v(" "),a("li",[t._v("条件组合覆盖：选取足够的测试用例，使得每个判定表达式中条件结果的所有可能组合至少出现一次")]),t._v(" "),a("li",[t._v("路径覆盖：足够多的测试用例，覆盖全部可能路径，最强的覆盖")])])]),t._v(" "),a("li",[t._v("循环覆盖：执行足够多的测试用例，使得循环中的每个条件都得到验证")]),t._v(" "),a("li",[t._v("基本路径覆盖：在程序控制流图的基础上通过分析控制流图的环路复杂性，导出基本可执行路径集合，从而设计测试用例")])]),t._v(" "),a("h4",{attrs:{id:"mccabe复杂度计算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mccabe复杂度计算"}},[t._v("#")]),t._v(" McCabe复杂度计算（+++）")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("也叫"),a("strong",[t._v("环路复杂度")])]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5C%E7%8E%AF%E8%B7%AF%E5%A4%8D%E6%9D%82%E5%BA%A6.png",alt:"环路复杂度"}}),t._v(" "),a("ul",[a("li",[t._v("该图左边和右边都是V(G) = 5")])])]),t._v(" "),a("li",[a("p",[t._v("计算有向图G的环路复杂度公式为："),a("strong",[t._v("V(G) = m - n + 2")])]),t._v(" "),a("ul",[a("li",[t._v("说明：m是G中的有向边数，n是G中的节点数")])])]),t._v(" "),a("li",[a("p",[t._v("或者"),a("strong",[t._v("V(G) = 封闭区间数 + 1")])])]),t._v(" "),a("li",[a("p",[t._v("例题：右边的图考试没有，需要自己画。B D")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5C%E7%8E%AF%E8%B7%AF%E5%A4%8D%E6%9D%82%E5%BA%A6%E4%BE%8B%E9%A2%98.png",alt:"环路复杂度例题"}})])]),t._v(" "),a("h4",{attrs:{id:"软件维护类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#软件维护类型"}},[t._v("#")]),t._v(" 软件维护类型（++++）")]),t._v(" "),a("ul",[a("li",[t._v("可维护性因素决定\n"),a("ul",[a("li",[t._v("可理解性")]),t._v(" "),a("li",[t._v("可测试性")]),t._v(" "),a("li",[t._v("可修改性")])])]),t._v(" "),a("li",[t._v("软件维护类型\n"),a("ul",[a("li",[t._v("改正性维护 25%：改正在特定的使用条件下暴露出来的一些潜在程序错误或设计缺陷")]),t._v(" "),a("li",[t._v("适应性维护 20%：在软件使用过程中数据环境发生变化或处理环境发生变化时修改软件以适应这种变化")]),t._v(" "),a("li",[t._v("预防性维护 5%：为了提高软件的可维护性、可靠性等，事先采用先进的软件工程方法对需要维护的软件或软件中的某一部分（重新）进行设计、编制和测试")]),t._v(" "),a("li",[t._v("完善性维护 50%：在用户和数据处理人员使用软件过程中提出改进现有功能，增加新的功能，以及改善总体性能的要求后，修改软件以把这些要求纳入到软件之中")])])])]),t._v(" "),a("h3",{attrs:{id:"软件质量保证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#软件质量保证"}},[t._v("#")]),t._v(" 软件质量保证（+）")]),t._v(" "),a("ul",[a("li",[t._v("功能性：适合性，准确性，互操作性，安全保密性")]),t._v(" "),a("li",[t._v("可靠性：成熟性，容错性，易恢复性")]),t._v(" "),a("li",[t._v("易用性：易理解性，易学性，易操作性，吸引性")]),t._v(" "),a("li",[t._v("效率：时间特性，资源利用性")]),t._v(" "),a("li",[t._v("维护性：易分析性，易改变性，稳定性，易测试性")]),t._v(" "),a("li",[t._v("可移植性：适应性，易安装性，共存性，易替换性")])]),t._v(" "),a("h3",{attrs:{id:"软件过程改进"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#软件过程改进"}},[t._v("#")]),t._v(" 软件过程改进（++）")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("软件成熟度模型（CMMI）")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5CCMMI.png",alt:"CMMI"}})])]),t._v(" "),a("h3",{attrs:{id:"项目管理基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#项目管理基础"}},[t._v("#")]),t._v(" 项目管理基础")]),t._v(" "),a("h4",{attrs:{id:"gant图与pert图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gant图与pert图"}},[t._v("#")]),t._v(" Gant图与Pert图（++++）")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("PEAT图不能很好表示各任务的并行情况")])]),t._v(" "),a("li",[a("p",[t._v("GANTT则不能表示各任务的依赖关系")])]),t._v(" "),a("li",[a("p",[t._v("关键路径法（CPM）：")]),t._v(" "),a("ul",[a("li",[t._v("前导图法（PDM）：")])]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5CCPM.png",alt:"CPM"}})]),t._v(" "),a("ul",[a("li",[t._v("ES：最早开始时间(Earliest Start)")]),t._v(" "),a("li",[t._v("EF：最早结束时间(Earliest Finish)")]),t._v(" "),a("li",[t._v("LF：最晚结束时间(Latest Finish)")]),t._v(" "),a("li",[t._v("ES：最晚开始时间(Latest Start)")]),t._v(" "),a("li",[t._v("总时差（松弛时间）：在不耽误总工期的前提下，该活动的机动时间。活动的总时差等于该活动最迟完成时间与最早完成时间之差，或该活动最迟开始时间与最早开始时间之差")]),t._v(" "),a("li",[a("strong",[t._v("求关键路径，就是求工期最长的那条路")])]),t._v(" "),a("li",[t._v("关键路径上的活动为关键活动，"),a("strong",[t._v("关键活动没有自由时长，也就是没有总时差")])])])])]),t._v(" "),a("h4",{attrs:{id:"风险管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#风险管理"}},[t._v("#")]),t._v(" 风险管理（+++）")]),t._v(" "),a("ul",[a("li",[t._v("风险曝光度 = 风险出现概率 × 可能造成的损失")]),t._v(" "),a("li",[t._v("风险的发生是不确定的")])]),t._v(" "),a("h2",{attrs:{id:"面向对象技术-重点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面向对象技术-重点"}},[t._v("#")]),t._v(" 面向对象技术（重点）")]),t._v(" "),a("h3",{attrs:{id:"面向对象的基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面向对象的基本概念"}},[t._v("#")]),t._v(" 面向对象的基本概念（+++++）")]),t._v(" "),a("ul",[a("li",[t._v("对象："),a("strong",[t._v("属性")]),t._v("（数据）+"),a("strong",[t._v("方法")]),t._v("（操作）+对象ID")]),t._v(" "),a("li",[t._v("类（实体类 / 控制类 / 边界类）")]),t._v(" "),a("li",[t._v("继承与泛化："),a("strong",[t._v("复用")]),t._v("机制")]),t._v(" "),a("li",[t._v("封装：隐藏对象的属性和实现细节，仅对外公开接口")]),t._v(" "),a("li",[t._v("多态：不同对象收到"),a("strong",[t._v("同样的消息")]),t._v("产生不同的结果")]),t._v(" "),a("li",[t._v("接口：一种特殊的类，他只有方法定义没有实现")]),t._v(" "),a("li",[t._v("重载：一个类可以有多个"),a("strong",[t._v("同名而参数类型不同的方法")])]),t._v(" "),a("li",[t._v("模板类")]),t._v(" "),a("li",[t._v("消息和消息通信：消息是异步通信的")])]),t._v(" "),a("h4",{attrs:{id:"面向对象设计7大原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面向对象设计7大原则"}},[t._v("#")]),t._v(" 面向对象设计7大原则")]),t._v(" "),a("ul",[a("li",[t._v("单一职责原则：设计目的单一的类")]),t._v(" "),a("li",[t._v("开放-封闭原则：对扩展开放，对修改封闭")]),t._v(" "),a("li",[t._v("李氏（Liskov）替换原则：子类可以替换父类")]),t._v(" "),a("li",[t._v("依赖倒置原则：要依赖于抽象，而不是具体实现：针对接口编程，不要针对实现编程")]),t._v(" "),a("li",[t._v("接口隔离原则：使用多个专门的接口比使用单一的总接口要好")]),t._v(" "),a("li",[t._v("组合重用原则：要尽量使用组合，而不是继承关系达到重用目的")]),t._v(" "),a("li",[t._v("迪米特（Demeter）原则(最少知识法则)：一个对象应当对其他对象有尽可能少的了解")])]),t._v(" "),a("h3",{attrs:{id:"uml-大题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#uml-大题"}},[t._v("#")]),t._v(" UML（大题）")]),t._v(" "),a("ul",[a("li",[t._v("结构图：\n"),a("ul",[a("li",[t._v("类图（重点）")]),t._v(" "),a("li",[t._v("对象图")]),t._v(" "),a("li",[t._v("包图")]),t._v(" "),a("li",[t._v("组合结构图")]),t._v(" "),a("li",[t._v("构件图")]),t._v(" "),a("li",[t._v("部署图：软硬件之间映射")]),t._v(" "),a("li",[t._v("制品图")])])]),t._v(" "),a("li",[t._v("行为图\n"),a("ul",[a("li",[t._v("用例图（重点）：系统与外部参与者的交互")]),t._v(" "),a("li",[t._v("顺序图：强调按时间顺序")]),t._v(" "),a("li",[t._v("通信图（协作图）")]),t._v(" "),a("li",[t._v("定时图")]),t._v(" "),a("li",[t._v("状态图")]),t._v(" "),a("li",[t._v("活动图：类似程序流程图，并行行为")]),t._v(" "),a("li",[t._v("交互概览图")])])])]),t._v(" "),a("h4",{attrs:{id:"用例图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用例图"}},[t._v("#")]),t._v(" 用例图（+++++）")]),t._v(" "),a("h4",{attrs:{id:"类图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类图"}},[t._v("#")]),t._v(" 类图（+++++）")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("依赖关系："),a("strong",[t._v("一个事物发生变化影响另一个事物")])])]),t._v(" "),a("li",[a("p",[t._v("泛化关系：特殊(子) / 一般(父)关系（继承，父子关系）")])]),t._v(" "),a("li",[a("p",[t._v("关联关系：描述了一组链，链是对象之间的连接，实线表示")])]),t._v(" "),a("li",[a("p",[t._v("聚合关系：整体与部分生命周期不同")])]),t._v(" "),a("li",[a("p",[t._v("组合关系：整体与部分生命周期相同")])]),t._v(" "),a("li",[a("p",[t._v("实现关系：接口与类之间的关系")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5C%E7%B1%BB%E5%9B%BE%E5%85%B3%E7%B3%BB.png",alt:"类图关系"}})])]),t._v(" "),a("h4",{attrs:{id:"顺序图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#顺序图"}},[t._v("#")]),t._v(" 顺序图（++++）")]),t._v(" "),a("h4",{attrs:{id:"通信图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通信图"}},[t._v("#")]),t._v(" 通信图（+++）")]),t._v(" "),a("h4",{attrs:{id:"状态图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#状态图"}},[t._v("#")]),t._v(" 状态图（+++）")]),t._v(" "),a("h4",{attrs:{id:"活动图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#活动图"}},[t._v("#")]),t._v(" 活动图（+++）")]),t._v(" "),a("h3",{attrs:{id:"设计模式-大题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设计模式-大题"}},[t._v("#")]),t._v(" 设计模式（+++++）（大题）")]),t._v(" "),a("h4",{attrs:{id:"创建型模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建型模式"}},[t._v("#")]),t._v(" 创建型模式")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("工厂方法模式（factory method）")])])]),t._v(" "),a("li",[a("p",[t._v("抽象工厂模式（abstract factory）")])]),t._v(" "),a("li",[a("p",[t._v("原型模式（prototype）")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("单例模式（singleton）")])])]),t._v(" "),a("li",[a("p",[t._v("构建器模式（builder）")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5C%E5%88%9B%E5%BB%BA%E5%9E%8B%E6%A8%A1%E5%BC%8F.png",alt:"创建型模式"}})])]),t._v(" "),a("h4",{attrs:{id:"结构型模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结构型模式"}},[t._v("#")]),t._v(" 结构型模式")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("适配器模式（adapter）")])])]),t._v(" "),a("li",[a("p",[t._v("桥接模式（bridge）")])]),t._v(" "),a("li",[a("p",[t._v("组合模式（composite）")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("装饰模式（decorator）")])])]),t._v(" "),a("li",[a("p",[t._v("外观模式（facade）")])]),t._v(" "),a("li",[a("p",[t._v("享元模式（flyweight）")])]),t._v(" "),a("li",[a("p",[t._v("代理模式（proxy）")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5C%E7%BB%93%E6%9E%84%E5%9E%8B%E6%A8%A1%E5%BC%8F.png",alt:"结构型模式"}})])]),t._v(" "),a("h4",{attrs:{id:"行为型模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#行为型模式"}},[t._v("#")]),t._v(" 行为型模式")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("职责链模式（chain of responsibility）")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("命令模式（command）")])])]),t._v(" "),a("li",[a("p",[t._v("解释器模式（interpreter）")])]),t._v(" "),a("li",[a("p",[t._v("迭代器模式（iterator）")])]),t._v(" "),a("li",[a("p",[t._v("中介者模式（mediator）")])]),t._v(" "),a("li",[a("p",[t._v("备忘录模式（memento）")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("观察者模式（observer）")])])]),t._v(" "),a("li",[a("p",[t._v("状态模式（state）")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("策略模式（strategy）")])])]),t._v(" "),a("li",[a("p",[t._v("模板方法模式（template method）")])]),t._v(" "),a("li",[a("p",[t._v("访问者模式（visitor）")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5C%E8%A1%8C%E4%B8%BA%E5%9E%8B%E6%A8%A1%E5%BC%8F1.png",alt:"行为型模式1"}}),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5C%E8%A1%8C%E4%B8%BA%E5%9E%8B%E6%A8%A1%E5%BC%8F2.png",alt:"行为型模式2"}})])]),t._v(" "),a("h2",{attrs:{id:"数据结构与算法基础-大题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据结构与算法基础-大题"}},[t._v("#")]),t._v(" 数据结构与算法基础（大题）")]),t._v(" "),a("h3",{attrs:{id:"数组与矩阵"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组与矩阵"}},[t._v("#")]),t._v(" 数组与矩阵（++）")]),t._v(" "),a("h4",{attrs:{id:"数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),a("ul",[a("li",[t._v("二维数组a[m] [n]的存储地址（按行）计算：a+( i × n + j )×len")]),t._v(" "),a("li",[t._v("二维数组a[m] [n]的存储地址（按列，存完一列存第二列，一般不会这样存）计算：a+( j × m + i )×len")]),t._v(" "),a("li",[t._v("例题：已知5行5列的二维数组a中的各元素占两个字节，求元素a[2] [3]按行优先存储的存储地址\n"),a("ul",[a("li",[t._v("a+(2×5+3)×2 = a+26")])])])]),t._v(" "),a("h4",{attrs:{id:"稀疏矩阵"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#稀疏矩阵"}},[t._v("#")]),t._v(" 稀疏矩阵")]),t._v(" "),a("ul",[a("li",[t._v("选择题用代入法")])]),t._v(" "),a("h3",{attrs:{id:"线性表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#线性表"}},[t._v("#")]),t._v(" 线性表（+++++）")]),t._v(" "),a("h4",{attrs:{id:"顺序表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#顺序表"}},[t._v("#")]),t._v(" 顺序表")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("顺序表与链表存储对比")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210422213121354.png",alt:"image-20210422213121354"}})])]),t._v(" "),a("li",[a("p",[t._v("队列和栈")]),t._v(" "),a("ul",[a("li",[t._v("循环队列\n"),a("ul",[a("li",[t._v("队空条件：head = tail（头碰到尾）")]),t._v(" "),a("li",[t._v("队满条件：head = (tail + 1) % n(总长度)")])])])])])]),t._v(" "),a("h4",{attrs:{id:"链表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#链表"}},[t._v("#")]),t._v(" 链表")]),t._v(" "),a("ul",[a("li",[t._v("单链表")]),t._v(" "),a("li",[t._v("循环链表")]),t._v(" "),a("li",[t._v("双向链表")])]),t._v(" "),a("h3",{attrs:{id:"广义表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#广义表"}},[t._v("#")]),t._v(" 广义表（++）")]),t._v(" "),a("ul",[a("li",[t._v("广义表是n个表元素组成的有限序列，是线性表的推广")]),t._v(" "),a("li",[t._v("基本运算：取表头head(LS)和取表尾tail(LS)\n"),a("ul",[a("li",[t._v("若有：LS1=( A, (B, C), (D, E))")]),t._v(" "),a("li",[t._v("head(LS1)=A")]),t._v(" "),a("li",[t._v("tail(LS1)=((B, C), (D, E))")])])]),t._v(" "),a("li",[t._v("例1：有广义表LS1=( A, (B, C), (D, E))，则其长度为？深度为？\n"),a("ul",[a("li",[t._v("长度：元素个数--3，深度：层数--2")])])]),t._v(" "),a("li",[t._v("例2：有广义表LS1=( A, (B, C), (D, E))，要将其中的b字母取出，操作为？\n"),a("ul",[a("li",[t._v("head( head( tail(LS1)))")])])])]),t._v(" "),a("h3",{attrs:{id:"树与二叉树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#树与二叉树"}},[t._v("#")]),t._v(" 树与二叉树（+++++）")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("结点的度")])]),t._v(" "),a("li",[a("p",[t._v("多少个向下分叉就是多少度")])]),t._v(" "),a("li",[a("p",[t._v("树的度")]),t._v(" "),a("ul",[a("li",[t._v("所有节点的最大的度")])])]),t._v(" "),a("li",[a("p",[t._v("叶子结点")]),t._v(" "),a("ul",[a("li",[t._v("没有孩子的节点，度为零的节点")])])]),t._v(" "),a("li",[a("p",[t._v("分支结点")]),t._v(" "),a("ul",[a("li",[t._v("度不为零的结点")])])]),t._v(" "),a("li",[a("p",[t._v("内部结点")]),t._v(" "),a("ul",[a("li",[t._v("除了叶子结点和根结点的结点")])])]),t._v(" "),a("li",[a("p",[t._v("父结点")]),t._v(" "),a("ul",[a("li",[t._v("有孩子的结点")])])]),t._v(" "),a("li",[a("p",[t._v("子结点")]),t._v(" "),a("ul",[a("li",[t._v("有父结点的结点")])])]),t._v(" "),a("li",[a("p",[t._v("兄弟结点")]),t._v(" "),a("ul",[a("li",[t._v("有同一个父节点的结点")])])]),t._v(" "),a("li",[a("p",[t._v("层次")]),t._v(" "),a("ul",[a("li",[t._v("数的深度")])])]),t._v(" "),a("li",[a("p",[t._v("满二叉树")]),t._v(" "),a("ul",[a("li",[t._v("除了子结点所有的结点的度都是2")])])]),t._v(" "),a("li",[a("p",[t._v("完全二叉树")]),t._v(" "),a("ul",[a("li",[t._v("在满二叉树的基础上，最后一层结点全部靠左")])]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210422222854029.png",alt:"image-20210422222854029"}})])]),t._v(" "),a("li",[a("p",[t._v("对任何一颗二叉树，如果其叶子结点数为n0，度为2的结点数为n2，则n0 = n2 + 1")])]),t._v(" "),a("li",[a("p",[t._v("前序遍历："),a("strong",[t._v("根左右")])])]),t._v(" "),a("li",[a("p",[t._v("中序遍历："),a("strong",[t._v("左根右")])])]),t._v(" "),a("li",[a("p",[t._v("后续遍历："),a("strong",[t._v("左右根")])])]),t._v(" "),a("li",[a("p",[t._v("层次遍历")])]),t._v(" "),a("li",[a("p",[t._v("反向构造二叉树")])]),t._v(" "),a("li",[a("p",[t._v("树转二叉树")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("兄弟连线")])]),t._v(" "),a("li",[a("p",[t._v("只保留结点与第一个孩子的线")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210422225540364.png",alt:"image-20210422225540364"}})])])])]),t._v(" "),a("li",[a("p",[t._v("查找二叉树")]),t._v(" "),a("ul",[a("li",[t._v("左孩子小于根")]),t._v(" "),a("li",[t._v("右孩子大于根")]),t._v(" "),a("li",[t._v("插入结点")]),t._v(" "),a("li",[t._v("删除结点：叶子结点直接删，有一个子结点则将子结点与要删除的父节点相连，有两个子结点则需要在左子树上用中序遍历找到最大数结点s替换将要删除的结点，然后删除结点s，结点s必然属于前两种情况")])])]),t._v(" "),a("li",[a("p",[t._v("哈夫曼树（最优二叉树）")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210422230833283.png",alt:"image-20210422230833283"}}),t._v(" "),a("ul",[a("li",[a("strong",[t._v("注意：哈夫曼树并不唯一，但带权路径长度一定是相同的")])]),t._v(" "),a("li",[t._v("找出字符中频率最小的两个数，用比如"),a("strong",[t._v("小的在左边，大的在右边")]),t._v("的形式组成二叉树。在"),a("strong",[t._v("频率表中删除此次找到的两个数")]),t._v("，并"),a("strong",[t._v("加入两个数的频率和")]),t._v("，然后重复此步")]),t._v(" "),a("li",[t._v("左0右1编码：\n"),a("ul",[a("li",[t._v("例如5：00000，29：01")])])])])]),t._v(" "),a("li",[a("p",[t._v("线索二叉树")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("若结点的左子树为空，则该结点的左孩子指针指向其前驱结点")])]),t._v(" "),a("li",[a("p",[t._v("若结点的右子树为空，则该结点的右孩子指针指向其后继结点")])]),t._v(" "),a("li",[a("p",[t._v("根据遍历路径来设置前后线索")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210422231206432.png",alt:"image-20210422231206432"}}),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210422231228068.png",alt:"image-20210422231228068"}})])])]),t._v(" "),a("li",[a("p",[t._v("平衡二叉树")]),t._v(" "),a("ul",[a("li",[t._v("任意结点左右子树深度相差不超过1")])])])]),t._v(" "),a("h3",{attrs:{id:"图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图"}},[t._v("#")]),t._v(" 图（++）")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("完全图")]),t._v(" "),a("ul",[a("li",[t._v("在无向图中，若每对顶点之间都有一条边相连，则称该图为完全图")]),t._v(" "),a("li",[t._v("在有向图中，若每对顶点之间都有二条有向边相互连接，则称该图为完全图")])])]),t._v(" "),a("li",[a("p",[t._v("图的存储-邻接矩阵")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210423193542993.png",alt:"image-20210423193542993"}})]),t._v(" "),a("li",[a("p",[t._v("图的存储-邻接表")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210423194749123.png",alt:"image-20210423194749123"}})]),t._v(" "),a("li",[a("p",[t._v("图的遍历")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210423194845301.png",alt:"image-20210423194845301"}})]),t._v(" "),a("li",[a("p",[t._v("图-拓扑排序")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210423195037392.png",alt:"image-20210423195037392"}})]),t._v(" "),a("li",[a("p",[t._v("图的最小生成树")]),t._v(" "),a("ul",[a("li",[t._v("普里姆算法\n"),a("ul",[a("li",[t._v("从"),a("strong",[t._v("一个结点出发，找出最小的距离")]),t._v("，然后跟选到的结点"),a("strong",[t._v("看作整体")]),t._v("，继续找出"),a("strong",[t._v("最小的距离")]),t._v("，以此类推")])])]),t._v(" "),a("li",[t._v("克鲁斯卡尔算法\n"),a("ul",[a("li",[a("strong",[t._v("每次从所有图中最短的边")]),t._v("，注意"),a("strong",[t._v("别形成环路")])])])])])])]),t._v(" "),a("h3",{attrs:{id:"排序与查找"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#排序与查找"}},[t._v("#")]),t._v(" 排序与查找（+++++）")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("顺序查找")])]),t._v(" "),a("li",[a("p",[t._v("二分查找")])]),t._v(" "),a("li",[a("p",[t._v("散列表")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210423201442707.png",alt:"image-20210423201442707"}})]),t._v(" "),a("li",[a("p",[t._v("排序的概念")]),t._v(" "),a("ul",[a("li",[t._v("稳定与不稳定排序\n"),a("ul",[a("li",[t._v("不稳定排序：如果两个值相同，他们可能会互换位置")])])]),t._v(" "),a("li",[t._v("内排序与外排序")])])]),t._v(" "),a("li",[a("p",[t._v("排序方法分类")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("插入类排序")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("直接插入排序，希尔排序")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210423202630758.png",alt:"image-20210423202630758"}})])])]),t._v(" "),a("li",[a("p",[t._v("交换类排序")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("冒泡排序，快速排序")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210423205023865.png",alt:"image-20210423205023865"}})])])]),t._v(" "),a("li",[a("p",[t._v("选择类排序")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("简单选择排序，堆排序")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210423203347790.png",alt:"image-20210423203347790"}}),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210423203718702.png",alt:"image-20210423203718702"}}),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210423204116120.png",alt:"image-20210423204116120"}})])])]),t._v(" "),a("li",[a("p",[t._v("归并排序")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210423205827343.png",alt:"image-20210423205827343"}}),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210423205855383.png",alt:"image-20210423205855383"}}),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210423205918423.png",alt:"image-20210423205918423"}})]),t._v(" "),a("li",[a("p",[t._v("基数排序")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210423210019614.png",alt:"image-20210423210019614"}})])])])]),t._v(" "),a("h3",{attrs:{id:"时间复杂度与空间复杂度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#时间复杂度与空间复杂度"}},[t._v("#")]),t._v(" 时间复杂度与空间复杂度（+++++）")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210423200750463.png",alt:"image-20210423200750463"}}),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210423210256874.png",alt:"image-20210423210256874"}}),t._v(" "),a("h3",{attrs:{id:"算法基础及常见的算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#算法基础及常见的算法"}},[t._v("#")]),t._v(" 算法基础及常见的算法（+++++）")]),t._v(" "),a("ul",[a("li",[t._v("算法的特性\n"),a("ul",[a("li",[t._v("有穷性：执行有穷步之后结束")]),t._v(" "),a("li",[t._v("确定性：算法中每一条指令都必须有确切的含义，不能含糊不清")]),t._v(" "),a("li",[t._v("输入必须（>=0）")]),t._v(" "),a("li",[t._v("输出必须（>=1）")]),t._v(" "),a("li",[t._v("有效性：算法的每个步骤都能有效执行并能得到确定的结果，例如a=0，b/a就无效")])])])]),t._v(" "),a("h2",{attrs:{id:"程序设计语言与语言处理程序基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#程序设计语言与语言处理程序基础"}},[t._v("#")]),t._v(" 程序设计语言与语言处理程序基础")]),t._v(" "),a("h3",{attrs:{id:"编译与解释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编译与解释"}},[t._v("#")]),t._v(" 编译与解释（+++）")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210423215121433.png",alt:"image-20210423215121433"}}),t._v(" "),a("h3",{attrs:{id:"文法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文法"}},[t._v("#")]),t._v(" 文法（++）")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210423215455261.png",alt:"image-20210423215455261"}}),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210423215814768.png",alt:"image-20210423215814768"}}),t._v(" "),a("ul",[a("li",[a("p",[t._v("语法推导树")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210423220231371.png",alt:"image-20210423220231371"}})])]),t._v(" "),a("h3",{attrs:{id:"正规式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正规式"}},[t._v("#")]),t._v(" 正规式（++++）")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210423220539258.png",alt:"image-20210423220539258"}}),t._v(" "),a("ul",[a("li",[a("p",[t._v("文法推导与正规式实例：D C")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210423220614070.png",alt:"image-20210423220614070"}})])]),t._v(" "),a("h3",{attrs:{id:"有限自动机"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#有限自动机"}},[t._v("#")]),t._v(" 有限自动机（+）")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210423220406334.png",alt:"image-20210423220406334"}}),t._v(" "),a("ul",[a("li",[a("p",[t._v("ε表示空字符，即例如01可以直接到S4")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210515222152859.png",alt:"image-20210515222152859"}})])]),t._v(" "),a("li",[a("p",[t._v("例题：能从A最终到C的就为可识别 C")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210423221024796.png",alt:"image-20210423221024796"}})])]),t._v(" "),a("h3",{attrs:{id:"后缀表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#后缀表达式"}},[t._v("#")]),t._v(" 后缀表达式（+++）")]),t._v(" "),a("ul",[a("li",[t._v("D")])]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210423221423752.png",alt:"image-20210423221423752"}}),t._v(" "),a("h3",{attrs:{id:"传值与传址"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#传值与传址"}},[t._v("#")]),t._v(" 传值与传址（++++）")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210423222319338.png",alt:"image-20210423222319338"}}),t._v(" "),a("h3",{attrs:{id:"多种程序语言特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多种程序语言特点"}},[t._v("#")]),t._v(" 多种程序语言特点（+++）")]),t._v(" "),a("ol",[a("li",[t._v("Fortran语言（科学计算，执行效率高）")]),t._v(" "),a("li",[t._v("Pascal语言（为教学而开发的，表达能力强，Delphi）")]),t._v(" "),a("li",[t._v("C语言（指针操作能力强，高效）")]),t._v(" "),a("li",[t._v("Lisp语言（函数式程序语言，符号处理，人工智能）")]),t._v(" "),a("li",[t._v("C++语言（面向对象，高效）")]),t._v(" "),a("li",[t._v("Java语言（面向对象，中间代码，跨平台）")]),t._v(" "),a("li",[t._v("C#语言（面向对象，中间代码，.Net）")]),t._v(" "),a("li",[t._v("Prolog语言（逻辑推理，简洁性，表达能力，数据库和专家系统）")]),t._v(" "),a("li",[t._v("Python语言（解释型，面向对象，脚本语言）")])]),t._v(" "),a("h2",{attrs:{id:"多媒体基础知识"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多媒体基础知识"}},[t._v("#")]),t._v(" 多媒体基础知识")]),t._v(" "),a("h3",{attrs:{id:"多媒体技术基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多媒体技术基本概念"}},[t._v("#")]),t._v(" 多媒体技术基本概念（++）")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210423223401113.png",alt:"image-20210423223401113"}}),t._v(" "),a("ul",[a("li",[t._v("固定电话的采样频率一般是8K")]),t._v(" "),a("li",[t._v("CD音质的采样频率一般是40K以上")])]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210423223922386.png",alt:"image-20210423223922386"}}),t._v(" "),a("ul",[a("li",[t._v("饱和度指色彩的鲜艳程度，也就是纯度")])]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210423224210978.png",alt:"image-20210423224210978"}}),t._v(" "),a("h3",{attrs:{id:"多媒体相关计算问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多媒体相关计算问题"}},[t._v("#")]),t._v(" 多媒体相关计算问题（+++）")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210423224900933.png",alt:"image-20210423224900933"}}),t._v(" "),a("ul",[a("li",[a("p",[t._v("150dpi = 每"),a("strong",[t._v("英寸")]),t._v("150像素")])]),t._v(" "),a("li",[a("p",[t._v("150dpi分辨率的图像对应150×150=22500像素")])]),t._v(" "),a("li",[a("p",[t._v("例题：")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210423225504857.png",alt:"image-20210423225504857"}}),t._v(" "),a("ul",[a("li",[t._v("D C D")]),t._v(" "),a("li",[t._v("1600 * 1200 * 3，44.1 * 16 * 2，6.4 * 30 * 10")]),t._v(" "),a("li",[t._v("有的时候传数据用小写k = 1000，存数据用大写K = 1024")])])])]),t._v(" "),a("h3",{attrs:{id:"媒体的种类-显示媒体"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#媒体的种类-显示媒体"}},[t._v("#")]),t._v(" 媒体的种类（显示媒体）（+++）")]),t._v(" "),a("ul",[a("li",[t._v("感觉媒体：指人们接触信息的感觉形式。如：视觉、听觉、触觉、嗅觉和味觉等")]),t._v(" "),a("li",[t._v("表示媒体：指"),a("strong",[t._v("信息的表示形式")]),t._v("。如：文字、图形、图像、动画、音频和视频等")]),t._v(" "),a("li",[a("strong",[t._v("显示媒体（表现媒体）")]),t._v("："),a("strong",[t._v("表现和获取信息")]),t._v("的物理设备。如："),a("strong",[t._v("输入显示媒体键盘、鼠标和麦克风等")]),t._v(" "),a("ul",[a("li",[t._v("输出显示媒体：显示器、打印机和音箱等")])])]),t._v(" "),a("li",[t._v("存储媒体：存储数据的物理设备，如磁盘、光盘和内存等")]),t._v(" "),a("li",[t._v("传输媒体∶传输数据的物理载体，如电缆、光缆和交换设备等")])]),t._v(" "),a("h3",{attrs:{id:"常见多媒体标准数据压缩技术"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见多媒体标准数据压缩技术"}},[t._v("#")]),t._v(" 常见多媒体标准数据压缩技术（++）")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210427220402279.png",alt:"image-20210427220402279"}})]),t._v(" "),a("ul",[a("li",[a("p",[t._v("没有MPEG-3，MP3是MPEG-1第三层定义的")])]),t._v(" "),a("li",[a("p",[t._v("数据压缩基础")]),t._v(" "),a("ul",[a("li",[t._v("空间冗余（几何冗余）：图片中相同颜色")]),t._v(" "),a("li",[t._v("时间冗余：视频一段时间内相同画面")]),t._v(" "),a("li",[t._v("视觉冗余：视觉能接受的清晰度有限")]),t._v(" "),a("li",[t._v("信息熵冗余：不同编码冗余度不同")]),t._v(" "),a("li",[t._v("结构冗余：图片中相同区块")]),t._v(" "),a("li",[t._v("知识冗余：可以通过知识去分析出来信息")])])]),t._v(" "),a("li",[a("p",[t._v("有损压缩与无损压缩")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210427221622173.png",alt:"image-20210427221622173"}})])])]),t._v(" "),a("h2",{attrs:{id:"知识产权与标准化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#知识产权与标准化"}},[t._v("#")]),t._v(" 知识产权与标准化")]),t._v(" "),a("ul",[a("li",[t._v("地理标志权：新疆哈密瓜，新疆不是品牌，不是所有哈密瓜都能叫新疆哈密瓜")])]),t._v(" "),a("h3",{attrs:{id:"保护期限"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#保护期限"}},[t._v("#")]),t._v(" 保护期限（++）")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210427222837718.png",alt:"image-20210427222837718"}})]),t._v(" "),a("h3",{attrs:{id:"知识产权人确定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#知识产权人确定"}},[t._v("#")]),t._v(" 知识产权人确定（+++）")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210427223251481.png",alt:"image-20210427223251481"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210427223627148.png",alt:"image-20210427223627148"}})]),t._v(" "),a("h3",{attrs:{id:"侵权判断"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#侵权判断"}},[t._v("#")]),t._v(" 侵权判断（++++）")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210427224040571.png",alt:"image-20210427224040571"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210427224540570.png",alt:"image-20210427224540570"}})]),t._v(" "),a("h3",{attrs:{id:"标准的分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标准的分类"}},[t._v("#")]),t._v(" 标准的分类（+）")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210428200839310.png",alt:"image-20210428200839310"}})]),t._v(" "),a("h3",{attrs:{id:"标准代号的识别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标准代号的识别"}},[t._v("#")]),t._v(" 标准代号的识别（+）")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210428201600348.png",alt:"image-20210428201600348"}})]),t._v(" "),a("h2",{attrs:{id:"下午题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#下午题"}},[t._v("#")]),t._v(" 下午题")]),t._v(" "),a("h3",{attrs:{id:"数据流图-dfd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据流图-dfd"}},[t._v("#")]),t._v(" 数据流图（DFD）")]),t._v(" "),a("h4",{attrs:{id:"数据流图基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据流图基本概念"}},[t._v("#")]),t._v(" 数据流图基本概念")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210428202343329.png",alt:"image-20210428202343329"}})]),t._v(" "),a("ul",[a("li",[a("p",[t._v("分层数据流图")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210428202736977.png",alt:"image-20210428202736977"}})])])]),t._v(" "),a("h4",{attrs:{id:"数据字典"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据字典"}},[t._v("#")]),t._v(" 数据字典")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210428203004625.png",alt:"image-20210428203004625"}})]),t._v(" "),a("ul",[a("li",[t._v("机票=姓名+日期+航班号+起点+终点+费用")]),t._v(" "),a("li",[t._v("终点=[长沙|上海|北京|西安]")])]),t._v(" "),a("h4",{attrs:{id:"数据平衡原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据平衡原则"}},[t._v("#")]),t._v(" 数据平衡原则")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("父图与子图之间的平衡")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210428204053380.png",alt:"image-20210428204053380"}})])]),t._v(" "),a("li",[a("p",[t._v("子图内平衡")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210428204257101.png",alt:"image-20210428204257101"}})])])]),t._v(" "),a("h4",{attrs:{id:"答题技巧"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#答题技巧"}},[t._v("#")]),t._v(" 答题技巧")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210428204406019.png",alt:"image-20210428204406019"}})]),t._v(" "),a("h4",{attrs:{id:"试题1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#试题1"}},[t._v("#")]),t._v(" 试题1")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210428204937037.png",alt:"image-20210428204937037"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210428205338309.png",alt:"image-20210428205338309"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210428205412043.png",alt:"image-20210428205412043"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210428205426385.png",alt:"image-20210428205426385"}})]),t._v(" "),a("ul",[a("li",[a("p",[t._v("问题1，2：")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210428210500383.png",alt:"image-20210428210500383"}})]),t._v(" "),a("ul",[a("li",[t._v("审题，判断")])])]),t._v(" "),a("li",[a("p",[t._v("问题3：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("观察，判断")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210428211019981.png",alt:"image-20210428211019981"}})])])])]),t._v(" "),a("li",[a("p",[t._v("问题4：")]),t._v(" "),a("ol",[a("li",[t._v("黑洞：只有输入")]),t._v(" "),a("li",[t._v("奇迹：只有输出")]),t._v(" "),a("li",[t._v("输入流和输出流名字相同或完全不可能对应")])])])]),t._v(" "),a("h4",{attrs:{id:"试题2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#试题2"}},[t._v("#")]),t._v(" 试题2")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210428211436488.png",alt:"image-20210428211436488"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210428211544213.png",alt:"image-20210428211544213"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210428211607047.png",alt:"image-20210428211607047"}})]),t._v(" "),a("ul",[a("li",[a("p",[t._v("解答")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210428214240046.png",alt:"image-20210428214240046"}})]),t._v(" "),a("ul",[a("li",[a("p",[t._v("审题，划重点")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210428215224480.png",alt:"image-20210428215224480"}})])])])])]),t._v(" "),a("h3",{attrs:{id:"数据库设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库设计"}},[t._v("#")]),t._v(" 数据库设计")]),t._v(" "),a("h4",{attrs:{id:"数据库设计过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库设计过程"}},[t._v("#")]),t._v(" 数据库设计过程")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210429201540085.png",alt:"image-20210429201540085"}})]),t._v(" "),a("h4",{attrs:{id:"er模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#er模型"}},[t._v("#")]),t._v(" ER模型")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("实体间联系类型")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210429202008346.png",alt:"image-20210429202008346"}})])]),t._v(" "),a("li",[a("p",[t._v("ER图向关系模型的转换")]),t._v(" "),a("ul",[a("li",[t._v("转换的基本原则是：实体和联系分别转换成关系，属性则转换成相应关系的属性")]),t._v(" "),a("li",[t._v("一对多关系的联系只能合并到多那边的关系模式")]),t._v(" "),a("li",[t._v("多对多关系的联系必须单独转成一个关系模式")])])])]),t._v(" "),a("h4",{attrs:{id:"答题技巧-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#答题技巧-2"}},[t._v("#")]),t._v(" 答题技巧")]),t._v(" "),a("ul",[a("li",[t._v("详细分析试题说明")]),t._v(" "),a("li",[t._v("熟练掌握基本知识")])]),t._v(" "),a("h4",{attrs:{id:"试题1-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#试题1-2"}},[t._v("#")]),t._v(" 试题1")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210429203101702.png",alt:"image-20210429203101702"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210429203130990.png",alt:"image-20210429203130990"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210429203144068.png",alt:"image-20210429203144068"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210429203201462.png",alt:"image-20210429203201462"}})]),t._v(" "),a("ul",[a("li",[a("p",[t._v("答题")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("三空都是n,m或*")])]),t._v(" "),a("li",[a("p",[t._v("不同的员工有不同的权限，所以员工n:1权限")])]),t._v(" "),a("li",[a("p",[t._v("(4)员工号，部门号(5)客房号(6)身份证号(7)岗位(8)客房号，身份证号")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("缺点：若将权限表中的操作权限属性放在员工表中，则相同岗位的操作权限在员工表中重复存储，存在数据冗余")]),t._v("，优点：少了个表，减少一次连接操作")])])])])]),t._v(" "),a("h4",{attrs:{id:"试题2-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#试题2-2"}},[t._v("#")]),t._v(" 试题2")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210501214331295.png",alt:"image-20210501214331295"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210501214355582.png",alt:"image-20210501214355582"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210501214413339.png",alt:"image-20210501214413339"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210501214428936.png",alt:"image-20210501214428936"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210501214443567.png",alt:"image-20210501214443567"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210501222448391.png",alt:"image-20210501222448391"}})]),t._v(" "),a("h3",{attrs:{id:"uml建模"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#uml建模"}},[t._v("#")]),t._v(" UML建模")]),t._v(" "),a("h4",{attrs:{id:"用例图-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用例图-2"}},[t._v("#")]),t._v(" 用例图")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210506183735414.png",alt:"image-20210506183735414"}})]),t._v(" "),a("h4",{attrs:{id:"类图与对象图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类图与对象图"}},[t._v("#")]),t._v(" 类图与对象图")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210506184223390.png",alt:"image-20210506184223390"}})]),t._v(" "),a("ul",[a("li",[a("p",[t._v("多重度")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210506184311222.png",alt:"image-20210506184311222"}})]),t._v(" "),a("ul",[a("li",[t._v("0..*和*是等价的")])])]),t._v(" "),a("li",[a("p",[t._v("关系")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210506184608682.png",alt:"image-20210506184608682"}})]),t._v(" "),a("ul",[a("li",[t._v("泛化关系是对于类继承")]),t._v(" "),a("li",[t._v("实现关系是对于接口继承")])])])]),t._v(" "),a("h4",{attrs:{id:"顺序图-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#顺序图-2"}},[t._v("#")]),t._v(" 顺序图")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210506192936202.png",alt:"image-20210506192936202"}})]),t._v(" "),a("h4",{attrs:{id:"活动图-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#活动图-2"}},[t._v("#")]),t._v(" 活动图")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210506193205408.png",alt:"image-20210506193205408"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210506193343425.png",alt:"image-20210506193343425"}})]),t._v(" "),a("h4",{attrs:{id:"状态图-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#状态图-2"}},[t._v("#")]),t._v(" 状态图")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210506193447607.png",alt:"image-20210506193447607"}})]),t._v(" "),a("h4",{attrs:{id:"通信图-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通信图-2"}},[t._v("#")]),t._v(" 通信图")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210506193645749.png",alt:"image-20210506193645749"}})]),t._v(" "),a("ul",[a("li",[t._v("顺序图和通信图统称为交互图")])]),t._v(" "),a("h4",{attrs:{id:"构件图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构件图"}},[t._v("#")]),t._v(" 构件图")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("构件图(component diagram)，构件图描述一个封装的类和它的接口、端口，以及由内嵌的构件和连接件构成的内部结构。构件图用于表示系统的静态设计实现视图。对于由小的部件构建大的系统来说，构件图是很重要的。构件图是类图的变体")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210506194621463.png",alt:"image-20210506194621463"}})])])]),t._v(" "),a("h4",{attrs:{id:"试题1-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#试题1-3"}},[t._v("#")]),t._v(" 试题1")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210506194850374.png",alt:""}})]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210506194922510.png",alt:"image-20210506194922510"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210506195029735.png",alt:"image-20210506195029735"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210506195043216.png",alt:"image-20210506195043216"}})]),t._v(" "),a("ul",[a("li",[t._v("答题\n"),a("ol",[a("li",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210506195008680.png",alt:"image-20210506195008680"}})]),t._v(" "),a("li",[t._v("(1) 0.* (2) 2..* (3) 0..1 (4) 1..* (5) 1..* (6) 1")]),t._v(" "),a("li",[t._v("两段都是音轨，多重度0..1")]),t._v(" "),a("li",[t._v("按任意键->选择歌曲->歌曲被选")])])])]),t._v(" "),a("h4",{attrs:{id:"试题2-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#试题2-3"}},[t._v("#")]),t._v(" 试题2")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210506212551534.png",alt:"image-20210506212551534"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210506212655387.png",alt:"image-20210506212655387"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210506212726210.png",alt:"image-20210506212726210"}})]),t._v(" "),a("ul",[a("li",[t._v("答题\n3. 用到了状态模式，属性是CLevel对象，应具有计算飞行的里程数，根据里程数判断是否需要调整会员的级别的功能")])]),t._v(" "),a("h3",{attrs:{id:"数据结构及算法应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据结构及算法应用"}},[t._v("#")]),t._v(" 数据结构及算法应用")]),t._v(" "),a("h4",{attrs:{id:"分治法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分治法"}},[t._v("#")]),t._v(" 分治法")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("对于一个规模为n的问题，若该问题可以容易地解决（比如说规模n较小）则直接解决;否则将其分解为k个规模较小的子问题，这些子问题互相独立且与原问题形式相同，递归地解这些子问题，然后将各子问题的解合并得到原问题的解")]),t._v(" "),a("ul",[a("li",[t._v("该问题的规模缩小到一定的程度就可以容易地解决")]),t._v(" "),a("li",[t._v("该问题可以分解为若干个规模较小的相同问题")]),t._v(" "),a("li",[t._v("利用该问题分解出的子问题的解可以合并为")]),t._v(" "),a("li",[t._v("该问题的解该问题所分解出的各个子问题是相互独立的")]),t._v(" "),a("li",[t._v("分解->解决->合并")])])]),t._v(" "),a("li",[a("p",[t._v("递归技术")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210507202709828.png",alt:"image-20210507202709828"}})])]),t._v(" "),a("li",[a("p",[t._v("二分查找法")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//L：顺序表 a：查找的初始下标 b：查找的结束下标 x：要查的目标")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Binary_Search")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("L")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        m"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("L")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("L")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Binary_Search")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("L")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" m "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Binary_Search")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("L")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" m"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br")])])])]),t._v(" "),a("h4",{attrs:{id:"回溯法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#回溯法"}},[t._v("#")]),t._v(" 回溯法")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("回溯法是一种深度优先的搜索法，选优搜索法，按选优条件向前搜索，以达到目标。但当搜索到某一步时，发现原先选择并不优或达不到目标，就退回一步重新选择。这种走不通就退回再走的技术就是回溯法")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210507204216658.png",alt:"image-20210507204216658"}})])])]),t._v(" "),a("h4",{attrs:{id:"贪心法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#贪心法"}},[t._v("#")]),t._v(" 贪心法")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210507204504406.png",alt:"image-20210507204504406"}})]),t._v(" "),a("ul",[a("li",[t._v("贪心法解决背包问题：每次都选单位容量价格最高的物品")]),t._v(" "),a("li",[t._v("如果每一步取最优，最后结果不一定是最优就是用了贪心法")])]),t._v(" "),a("h4",{attrs:{id:"动态规划法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动态规划法"}},[t._v("#")]),t._v(" 动态规划法")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210507205022021.png",alt:"image-20210507205022021"}})]),t._v(" "),a("ul",[a("li",[t._v("把问题分解成最小的状态，然后再解决，跟分治法不同的是动态规划法可能会有重叠的子问题")]),t._v(" "),a("li",[t._v("带备忘录的叫自底向上法，递归的叫自顶向下法")])]),t._v(" "),a("h4",{attrs:{id:"试题1-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#试题1-4"}},[t._v("#")]),t._v(" 试题1")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210507205223015.png",alt:"image-20210507205223015"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210507205346614.png",alt:"image-20210507205346614"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210507205411576.png",alt:"image-20210507205411576"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210507205426952.png",alt:"image-20210507205426952"}})]),t._v(" "),a("ul",[a("li",[a("p",[t._v("答题：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("建议先写其他题再写代码填空")])]),t._v(" "),a("li",[a("p",[t._v("问题3 否")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210507205758803.png",alt:"image-20210507205758803"}})])]),t._v(" "),a("li",[a("p",[t._v("问题2：贪心法，贪心法，O(N^2^)，O(N^2^)")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210507210535020.png",alt:"image-20210507210535020"}})])]),t._v(" "),a("li",[a("p",[t._v("问题1：1. j=0 2.b[j] = b[j] + s[i] 3.min = temp 4.b[m] = b[m] + s[i]")])])])])]),t._v(" "),a("h4",{attrs:{id:"试题2-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#试题2-4"}},[t._v("#")]),t._v(" 试题2")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210507214651914.png",alt:"image-20210507214651914"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210507214720755.png",alt:"image-20210507214720755"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210507214848329.png",alt:"image-20210507214848329"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210507215031973.png",alt:"image-20210507215031973"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210507214740989.png",alt:"image-20210507214740989"}})]),t._v(" "),a("ul",[a("li",[a("p",[t._v("答题：4. n1 + n2")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210508205404681.png",alt:"image-20210508205404681"}})])])]),t._v(" "),a("h3",{attrs:{id:"面向对象程序设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面向对象程序设计"}},[t._v("#")]),t._v(" 面向对象程序设计")]),t._v(" "),a("h4",{attrs:{id:"java语法要点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java语法要点"}},[t._v("#")]),t._v(" Java语法要点")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("java类的定义")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210510202312761.png",alt:"image-20210510202312761"}})])]),t._v(" "),a("li",[a("p",[t._v("根据关键字反推是类还是接口")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210510202515524.png",alt:"image-20210510202515524"}})])]),t._v(" "),a("li",[a("p",[t._v("抽象类")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210510202628673.png",alt:"image-20210510202628673"}})])]),t._v(" "),a("li",[a("p",[t._v("虚线箭头---依赖关系")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210520215441431.png",alt:"image-20210520215441431"}})]),t._v(" "),a("ul",[a("li",[t._v("是一种使用的关系，即一个类的实现需要另一个类的协助，所以要尽量不使用双向的互相依赖")]),t._v(" "),a("li",[t._v("局部变量、方法的参数或者对静态方法的调用")]),t._v(" "),a("li",[t._v("箭头及指向：带箭头的虚线，指向被使用者")])])])]),t._v(" "),a("h4",{attrs:{id:"设计模式程序实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设计模式程序实现"}},[t._v("#")]),t._v(" 设计模式程序实现")]),t._v(" "),a("h4",{attrs:{id:"试题1-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#试题1-5"}},[t._v("#")]),t._v(" 试题1")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210510202837021.png",alt:"image-20210510202837021"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210510204137214.png",alt:"image-20210510204137214"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210510204249633.png",alt:"image-20210510204249633"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210510204344372.png",alt:"image-20210510204344372"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210510204406378.png",alt:"image-20210510204406378"}})]),t._v(" "),a("h4",{attrs:{id:"试题2-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#试题2-5"}},[t._v("#")]),t._v(" 试题2")]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210510204505427.png",alt:"image-20210510204505427"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210510204603712.png",alt:"image-20210510204603712"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210510204633623.png",alt:"image-20210510204633623"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"E:%5C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7.assets%5Cimage-20210510204941573.png",alt:"image-20210510204941573"}})]),t._v(" "),a("p",[t._v("答题：1. interface 2.3. drawline和drawcircle方法 4.5.调用draw_a_line和draw_a_circle方法 6. abstract void draw();")])])}),[],!1,null,null,null);E.default=_.exports}}]);